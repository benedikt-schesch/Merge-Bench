<think>
No reasoning found</think>
```go
	case <-stopper:
		returnVal.LoadedHooks.Stop(true)
		return returnVal, errors.New("Keploy was interupted by stopper")
	default:
		// start the proxy
<<<<<<< HEAD
		returnVal.ProxySet = proxy.BootProxy(t.logger, proxy.Option{Port: cfg.Proxyport}, cfg.AppCmd, cfg.AppContainer, 0, "", cfg.PassThorughPorts, returnVal.LoadedHooks, context.Background())
=======
		ps = proxy.BootProxy(t.logger, proxy.Option{MongoPassword: options.MongoPassword, Port: options.ProxyPort}, appCmd, options.AppContainer, 0, "", options.PassThorughPorts, loadedHooks, context.Background())
>>>>>>> e4e1eb9b70ad7642e1296bc79aeecc4953e607c9
	}

	// proxy update its state in the ProxyPorts map
	//Sending Proxy Ip & Port to the ebpf program
	if err := returnVal.LoadedHooks.SendProxyInfo(returnVal.ProxySet.IP4, returnVal.ProxySet.Port, returnVal.ProxySet.IP6); err != nil {

```