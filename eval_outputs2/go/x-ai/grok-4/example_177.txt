<think>
No reasoning found</think>
```go
		// checking whether the provided testset match with a recorded testset.
		if _, ok := initialisedValues.SessionsMap[sessionIndex]; !ok {
			t.logger.Info("no testset found with: ", zap.Any("name", sessionIndex))
			continue
		}
<<<<<<< HEAD
		testRunStatus := t.RunTestSet(sessionIndex, path, testReportPath, appCmd, options.AppContainer, options.AppNetwork, options.Delay, 0, initialisedValues.YamlStore, initialisedValues.LoadedHooks, initialisedValues.TestReportFS, nil, options.ApiTimeout, initialisedValues.Ctx, options.NoiseConfig, false)
=======
		noiseConfig := options.GlobalNoise
		if tsNoise, ok := options.TestsetNoise[sessionIndex]; ok {
			noiseConfig = JoinNoises(options.GlobalNoise, tsNoise)
		}
		testRunStatus := t.RunTestSet(sessionIndex, path, testReportPath, appCmd, options.AppContainer, options.AppNetwork, options.Delay, 0, ys, loadedHooks, testReportFS, nil, options.ApiTimeout, ctx, noiseConfig, false)

>>>>>>> 7d20443551e8827b2d4cf431a63d30a5d3a16091
		switch testRunStatus {
		case models.TestRunStatusAppHalted:
			testRes = false
			exitLoop = true
		case models.TestRunStatusFaultUserApp:

```