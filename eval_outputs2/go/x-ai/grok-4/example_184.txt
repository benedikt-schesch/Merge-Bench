<think>
No reasoning found</think>
```go
	select {
	case <-stopper:
		return returnVal, errors.New("Keploy was interupted by stopper")
	default:
		// load the ebpf hooks into the kernel
<<<<<<< HEAD
		if err := returnVal.LoadedHooks.LoadHooks(cfg.AppCmd, cfg.AppContainer, 0, context.Background()); err != nil {
			return returnVal, err
=======
		if err := loadedHooks.LoadHooks(appCmd, options.AppContainer, 0, context.Background()); err != nil {
			return false
>>>>>>> e4e1eb9b70ad7642e1296bc79aeecc4953e607c9
		}
	}

	select {
	case <-stopper:

```