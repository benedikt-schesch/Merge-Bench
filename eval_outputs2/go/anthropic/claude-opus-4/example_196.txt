<think>
No reasoning found</think>
Looking at this merge conflict, both sides are trying to add embedded files to the `fs` variable:

- HEAD wants to embed: `pkgs op.cue`
- The incoming change wants to embed: `pkgs op.cue ql.cue`

The semantic intent appears to be that the incoming change is adding an additional file (`ql.cue`) to the existing embedded files. Since both sides include `pkgs` and `op.cue`, and the incoming change adds `ql.cue`, the resolution should include all three files.

```go

	"cuelang.org/go/cue/build"
)

var (
	//go:embed pkgs op.cue ql.cue
	fs embed.FS
)

// GetPackages Get Stdlib packages
func GetPackages(tagTempl string) (map[string]string, error) {

```