<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to add timestamp-related fields to the same struct, but with different approaches:

- HEAD side: Adds just the `Created` field with `time.Now().Unix()`
- Other side: Adds the same `Created` field plus two additional timestamp fields (`ReqTimestampMock` and `ResTimestampMock`)

The semantic intent appears to be that both sides want to track creation time, but the incoming changes also want to track request and response mock timestamps. Since these changes are additive and don't conflict in their purpose, the resolution should include all fields.

```go
				HttpResp: &kModels.HttpResp{
					StatusCode: respParsed.StatusCode,
					Header:     pkg.ToYamlHttpHeader(respParsed.Header),
					Body:       string(respBody),
				},
				Created:          time.Now().Unix(),
				ReqTimestampMock: reqTimestampMock,
				ResTimestampMock: resTimestampcMock,
			},
		}, ctx)
		finalReq = []byte("")
		finalResp = []byte("")


```