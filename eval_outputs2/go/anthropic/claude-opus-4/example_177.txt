<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to call `t.RunTestSet` but with different approaches:

**HEAD (current branch):**
- Uses `initialisedValues` struct to pass multiple parameters (`YamlStore`, `LoadedHooks`, `TestReportFS`, `Ctx`)
- Uses `options.NoiseConfig` directly

**Incoming changes:**
- Adds logic to determine `noiseConfig` based on whether there's a test-set specific noise configuration
- Uses individual variables (`ys`, `loadedHooks`, `testReportFS`, `ctx`) instead of the `initialisedValues` struct

The semantic intent of the incoming changes is to add per-testset noise configuration support while the HEAD version seems to have refactored to use an `initialisedValues` struct. The resolution should keep the refactored structure while incorporating the noise configuration logic.

```go
		// checking whether the provided testset match with a recorded testset.
		if _, ok := initialisedValues.SessionsMap[sessionIndex]; !ok {
			t.logger.Info("no testset found with: ", zap.Any("name", sessionIndex))
			continue
		}
		noiseConfig := options.GlobalNoise
		if tsNoise, ok := options.TestsetNoise[sessionIndex]; ok {
			noiseConfig = JoinNoises(options.GlobalNoise, tsNoise)
		}
		testRunStatus := t.RunTestSet(sessionIndex, path, testReportPath, appCmd, options.AppContainer, options.AppNetwork, options.Delay, 0, initialisedValues.YamlStore, initialisedValues.LoadedHooks, initialisedValues.TestReportFS, nil, options.ApiTimeout, initialisedValues.Ctx, noiseConfig, false)
		switch testRunStatus {
		case models.TestRunStatusAppHalted:
			testRes = false
			exitLoop = true
		case models.TestRunStatusFaultUserApp:

```