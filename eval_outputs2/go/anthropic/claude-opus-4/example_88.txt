<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to define the same method `receiveMsgAndIndicateRetry`, but with a different parameter type:

- HEAD uses `interface{}` as the parameter type
- The incoming change uses `any` as the parameter type

Since Go 1.18, `any` is an alias for `interface{}` and is the preferred, more idiomatic way to express the empty interface. Both achieve the same semantic intent - accepting a parameter of any type.

The resolution should use the more modern `any` type:

```go
		}
	}
	return lastErr
}

func (s *serverStreamingRetryingStream) receiveMsgAndIndicateRetry(m any) (bool, error) {
	err := s.getStream().RecvMsg(m)
	if err == nil || err == io.EOF {
		return false, err
	}
	if isContextError(err) {
```