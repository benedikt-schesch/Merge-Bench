<think>
No reasoning found</think>
Looking at this merge conflict, I need to understand the semantic intent of both sides:

- `HEAD` is using `utils.VersionForTelemetry`
- The incoming change is using `utils.KeployVersion`

Both sides are trying to set the `tel.KeployVersion` field, but using different source values. Without more context about the codebase and the intent behind these two different version variables, I cannot determine which one is semantically correct or if both should somehow be used.

Since the intent is ambiguous (we don't know why there are two different version variables or which one should be used for telemetry), I'm returning the snippet with the conflict preserved:

```go
			}
			tel.InstallationID = id
		}
		event.InstallationID = tel.InstallationID
		event.OS = runtime.GOOS
<<<<<<< HEAD
		tel.KeployVersion = utils.VersionForTelemetry
=======
		tel.KeployVersion = utils.KeployVersion
>>>>>>> 7dea42d7b9709f2c68032e56d8d67995336c9378
		event.KeployVersion = tel.KeployVersion
		event.Arch = runtime.GOARCH
		bin, err := marshalEvent(event, tel.logger)
		if err != nil {
			tel.logger.Debug("failed to marshal event", zap.Error(err))
```