<think>
No reasoning found</think>
The merge conflict involves parameters passed to the `RunTestSet` function call. The parameters differ significantly between the two branches in terms of variable sources and naming conventions. Since the surrounding context doesn't provide enough information to determine the relationship between `initialisedValues`, `options`, and other variables like `ys` or `loadedHooks`, the intent is ambiguous. 

Here's the original snippet with the conflict preserved:

```go
		// checking whether the provided testset match with a recorded testset.
		if _, ok := initialisedValues.SessionsMap[sessionIndex]; !ok {
			t.logger.Info("no testset found with: ", zap.Any("name", sessionIndex))
			continue
		}
<<<<<<< HEAD
		testRunStatus := t.RunTestSet(sessionIndex, path, testReportPath, appCmd, appContainer, appNetwork, Delay, 0, initialisedValues.YamlStore, initialisedValues.LoadedHooks, initialisedValues.TestReportFS, nil, apiTimeout, initialisedValues.Ctx, noiseConfig, false)
=======
		testRunStatus := t.RunTestSet(sessionIndex, path, testReportPath, appCmd, options.AppContainer, options.AppNetwork, options.Delay, 0, ys, loadedHooks, testReportFS, nil, options.ApiTimeout, ctx, options.NoiseConfig, false)
>>>>>>> e4e1eb9b70ad7642e1296bc79aeecc4953e607c9
		switch testRunStatus {
		case models.TestRunStatusAppHalted:
			testRes = false
			exitLoop = true
		case models.TestRunStatusFaultUserApp:
```