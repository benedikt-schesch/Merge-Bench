<think>
No reasoning found</think>
The conflict involves differences in both the function signature and implementation between the two branches. The key points are:

1. **Receiver type** differs (`NiceMD` vs `MD`)
2. **Key processing** differs (direct lowercasing vs `encodeKeyValue` function)
3. **Value handling** differs (direct assignment vs processed value)

Since we don't have context about:
- The relationship between `NiceMD` and `MD` types
- The implementation and purpose of `encodeKeyValue`
- Why the file was moved between directories

The conflict cannot be safely resolved automatically. Here's the original snippet with conflict markers preserved:

```go
// Set sets the given value in a metadata.
//
// It works analogously to http.Header.Set, overwriting all previous metadata values.
//
// The function is binary-key safe.
<<<<<<< HEAD:util/metautils/nicemd.go
func (m NiceMD) Set(key string, value string) NiceMD {
	k := strings.ToLower(key)
	m[k] = []string{value}
=======
func (m MD) Set(key string, value string) MD {
	k, v := encodeKeyValue(key, value)
	m[k] = []string{v}
>>>>>>> 5ca0c417820d989b27ce8f2ef107c8ca878f3561:metadata/metadata.go
	return m
}

// Add retrieves a single value from the metadata.
//
```