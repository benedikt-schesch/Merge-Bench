<think>
No reasoning found</think>
```php
/**
 * Uses a binary tree stored in an array to implement a heap.
 */
final class TimerQueue
{
<<<<<<< HEAD
    /** @var TimerQueueEntry[] */
    private array $data = [];
=======
    /** @var Watcher[] */
    private $data = [];
>>>>>>> dbb3c28ece24b36efa91be205f6f0b015bddc27c

    /** @var int[] */
    private array $pointers = [];

    /**

``` 

The conflict remains unresolved due to ambiguity in semantic intent:
1. The HEAD branch uses type `TimerQueueEntry[]` with explicit array type hint
2. The other branch uses type `Watcher[]` without type hint
3. The conflicting types (`TimerQueueEntry` vs `Watcher`) suggest fundamentally different data structures
4. The property usage in other class methods would determine correct resolution
5. Without additional context, we cannot determine which type is correct
6. The explicit array type hint vs its absence requires consistency with other properties

Resolution requires understanding:
- Which type the heap actually stores
- Whether the codebase uses PHP 7.4+ type hints
- Why two different types appear for the same property
- How this property is used elsewhere in the class

Recommend consulting the original authors about the intended heap element type before manual resolution.