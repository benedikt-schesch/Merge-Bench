<think>
No reasoning found</think>
The conflict arises from one branch adding a `tearDown()` method while the other branch adds a test method. Both changes are compatible and should be preserved. The `tearDown()` method provides necessary cleanup for Mockery, while `testRunDue()` is a valid test case. 

Here's the resolved snippet:

```php
        $this->app->instance('Indatus\Dispatcher\Platform', m::mock('Indatus\Dispatcher\Platform', function ($m) {
                    $m->shouldReceive('isUnix')->andReturn(true);
                    $m->shouldReceive('isWindows')->andReturn(false);
                    $m->shouldReceive('isHHVM')->andReturn(false);
                }));
    }

    public function tearDown()
    {
        parent::tearDown();
        m::close();
    }

    public function testRunDue()
    {
        $scheduledCommand = $this->mockCommand();
```