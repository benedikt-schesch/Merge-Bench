<think>
No reasoning found</think>
The conflict remains unresolved due to ambiguity in the intended behavior. Both changes achieve the same goal of iterating through available commands, but use different mechanisms:

1. **HEAD version** uses the static `Artisan` facade
2. **Other branch** uses an instance property `$this->console`

Without additional context about the class implementation (specifically whether `$this->console` exists and is properly initialized), it's impossible to determine which approach is correct. Both versions are semantically valid but depend on different implementation details.

Here is the preserved output with the conflict markers:

```php
     * @return \Indatus\Dispatcher\Scheduling\ScheduledCommandInterface[]
     */
    public function getScheduledCommands()
    {
        $scheduledCommands = [];
<<<<<<< HEAD
        foreach (Artisan::all() as $command) {
=======
        foreach ($this->console->all() as $command) {
>>>>>>> 8a08444b80550a21aa79eb24c96872111fe9cd01
            if ($command instanceof ScheduledCommandInterface) {
                $scheduledCommands[] = $command;
            }
        }


```