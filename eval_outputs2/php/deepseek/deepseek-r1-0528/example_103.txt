<think>
No reasoning found</think>
Based on the semantic analysis, both sides of the conflict are adding new documentation parameters that are not mutually exclusive and serve different purposes. The resolution maintains both additions in the order they originally appeared in the conflict markers (HEAD first, then the merging branch).

Here's the resolved code snippet:

```php
/**
 * @var array $jigoshop All Jigoshop plugins.
 * @var array $rest Other plugins.
 * @var string $errors
 * @var string $info
 * @var string $phpVersion
 * @var array $overwrittenTemplateFiles
 * @var bool $isAllReady true when all client plugins is stable and ready for JS2
 */

?>
<style>
	button {
```

Key resolution points:
1. Both parameters (`$phpVersion`, `$overwrittenTemplateFiles` and `$isAllReady`) are preserved as they document different aspects
2. Order maintains HEAD changes first followed by merging branch's changes
3. All original formatting and context before/after the conflict is preserved
4. The typo in the merging branch's comment ("plugin is") is preserved verbatim as per source