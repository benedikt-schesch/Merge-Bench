<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to import classes for a Symfony command, but they're using different base command classes:

- HEAD wants to use `ContainerAwareCommand` from Symfony Bundle Framework and also imports two FOS OAuth interfaces
- The other branch wants to use the more modern `Command` from Symfony Console Component

Since `ContainerAwareCommand` is deprecated in newer versions of Symfony in favor of dependency injection, and the other branch is using the more current approach with `Command`, I'll resolve this by keeping the modern approach while preserving the necessary imports from HEAD:

```php
 * file that was distributed with this source code.
 */

namespace FOS\OAuthServerBundle\Command;

use FOS\OAuthServerBundle\Model\AuthCodeManagerInterface;
use FOS\OAuthServerBundle\Model\TokenManagerInterface;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

class CleanCommand extends Command
{

```