<think>
No reasoning found</think>
Looking at this merge conflict, I need to understand the semantic intent of both sides:

- **HEAD (left side)**: Uses a more concise syntax with `array_map(e(...), $strings)` to escape strings
- **RIGHT side**: Uses an explicit callback function that converts strings using `EncodedHtmlString::convert()` with a conditional `withQuote` parameter based on whether `$this->markdown` is set

The key difference is that the right side introduces more sophisticated encoding logic that considers whether the content is markdown. This appears to be a feature enhancement that provides context-aware encoding.

Since the right side represents a more feature-complete implementation that handles markdown-specific encoding requirements, it should be preserved. The simpler `e(...)` function from HEAD likely doesn't handle the markdown use case properly.

```php
     * @param  bool  $escape
     * @return $this
     */
    public function assertSeeInOrderInHtml($strings, $escape = true)
    {
        $strings = $escape ? array_map(function ($string) {
            return EncodedHtmlString::convert($string, withQuote: isset($this->markdown));
        }, $strings) : $strings;

        [$html, $text] = $this->renderForAssertions();

        PHPUnit::assertThat($strings, new SeeInOrder($html));


```