<think>
No reasoning found</think>
Looking at this merge conflict, I need to understand what both sides are trying to achieve:

1. **HEAD (current branch)**: Wants to define `$strpos_func = 'mb_strpos';` when multibyte support is available
2. **Incoming change**: Removes this line entirely

The context shows this is part of a conditional block that checks for multibyte support (`$mb_support`). The pattern suggests that when multibyte support is available, the code is setting up function name variables for the multibyte versions of string functions. We can see `$strtolower_func = 'mb_strtolower';` is being set in both versions.

The intent appears to be:
- HEAD wants to use multibyte-aware string position function when available
- The incoming change suggests this variable may not be needed or is defined elsewhere

Without more context about how `$strpos_func` is used later in the code, and given that the pattern shows setting up multibyte function names, I'll preserve the HEAD version as it maintains consistency with the `$strtolower_func` pattern.

```php

            if (!$mb_support) {
                return false;
            }

            $strpos_func     = 'mb_strpos';
            $strtolower_func = 'mb_strtolower';
        }

        $fp = fopen($this->wordlist_file, 'rb');
        if (!$fp) return false;

```