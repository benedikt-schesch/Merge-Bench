<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to set the same properties but with a slight difference in the `nickname` assignment.

The HEAD version includes a conditional check to use a custom nickname if provided in the options array, while the other branch always uses the camel-cased ASCII version of the title.

The semantic intent appears to be:
- HEAD wants to allow optional custom nicknames through the options array
- The other branch simplified the code to always derive the nickname from the title

Since HEAD's version is more flexible and includes the functionality of the other branch as a fallback, it seems the better choice to preserve both intents.

Here's the resolved code:

```php
	public function __construct($builder, $id, $title, $options)
	{
		$this->builder     = $builder;
		$this->id          = $id;
		$this->title       = $title;
		$this->nickname    = isset($options['nickname']) ? $options['nickname'] : camel_case(Str::ascii($title));
		$this->attributes  = $this->builder->extractAttributes($options);
		$this->parent      = (is_array($options) && isset($options['parent'])) ? $options['parent'] : null;


		// Storing path options with each link instance.
		if(!is_array($options)) {

```