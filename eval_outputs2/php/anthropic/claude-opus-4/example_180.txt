<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to achieve the same semantic goal - iterating over all console commands. The difference is in how they access the console commands:

- HEAD uses `Artisan::all()` (static method call)
- The other branch uses `$this->console->all()` (instance method call)

Without more context about the class structure and whether `$this->console` is properly initialized, or whether there's a preference for dependency injection over static calls, I cannot determine which approach is semantically correct for this codebase.

Here's the snippet with the conflict preserved:

```php
     * @return \Indatus\Dispatcher\Scheduling\ScheduledCommandInterface[]
     */
    public function getScheduledCommands()
    {
        $scheduledCommands = [];
<<<<<<< HEAD
        foreach (Artisan::all() as $command) {
=======
        foreach ($this->console->all() as $command) {
>>>>>>> 8a08444b80550a21aa79eb24c96872111fe9cd01
            if ($command instanceof ScheduledCommandInterface) {
                $scheduledCommands[] = $command;
            }
        }


```