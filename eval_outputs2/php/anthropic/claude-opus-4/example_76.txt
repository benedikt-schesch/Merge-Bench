<think>
No reasoning found</think>
Looking at this merge conflict, I need to understand what each side is trying to achieve:

**HEAD (current branch):**
- Uses `$db->num_rows($result) > 0` to check if there are results
- Includes a CSRF token in the query string: `&csrf_token='.pun_csrf_token()`

**Incoming change (1ad12d25...):**
- Uses `$db->has_rows($result)` to check if there are results (likely a newer/cleaner API)
- Does NOT include the CSRF token in the query string

The semantic intent appears to be:
1. Both sides want to check if there are more posts to process
2. HEAD adds CSRF protection (security enhancement)
3. The incoming change modernizes the database API method

The resolution should preserve both improvements: use the modern `has_rows()` method AND keep the CSRF token for security.

```php
	// Check if there is more work to do
	if ($end_at > 0)
	{
		$result = $db->query('SELECT id FROM '.$db->prefix.'posts WHERE id > '.$end_at.' ORDER BY id ASC LIMIT 1') or error('Unable to fetch next ID', __FILE__, __LINE__, $db->error());

		if ($db->has_rows($result))
			$query_str = '?action=rebuild&csrf_token='.pun_csrf_token().'&i_per_page='.$per_page.'&i_start_at='.$db->result($result);
	}

	$db->end_transaction();
	$db->close();


```