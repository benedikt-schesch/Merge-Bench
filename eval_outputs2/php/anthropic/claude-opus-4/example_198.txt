<think>
No reasoning found</think>
Looking at this merge conflict, I need to understand what both sides are trying to achieve:

- **HEAD (current branch)**: Has type declarations for the parameters - `\Phake\IMock|string $object` and `string $method`
- **Incoming change**: Removes the type declarations, using just `$object` and `$method`

Given the context:
1. The docblock already specifies `@param \Phake\IMock|class-string $object`
2. The third parameter `?\Phake\Matchers\IChainableArgumentMatcher $argumentMatcher` has a type declaration in both versions
3. The fourth parameter `IVerifierMode $verificationMode` has a type declaration in both versions

The HEAD version appears to be adding PHP type hints to match the docblock documentation, which is a common modernization pattern in PHP codebases. The incoming change seems to be from an older version or a branch that hasn't adopted type hints yet.

Since the pattern shows type hints are being used for other parameters, and the HEAD version is adding proper type hints that match the documentation, I'll resolve in favor of HEAD:

```php

    /**
     * @param \Phake\IMock|class-string $object
     */
    public function __construct(
        \Phake\IMock|string $object,
        string $method,
        ?\Phake\Matchers\IChainableArgumentMatcher $argumentMatcher,
        IVerifierMode $verificationMode
    ) {
        $this->object           = $object;
        $this->method           = $method;

```