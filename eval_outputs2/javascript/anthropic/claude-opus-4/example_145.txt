<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to achieve similar functionality with some differences:

1. **HEAD** uses `cmp(cur, lastPos) != 0` to check if the position changed, while the incoming change uses `!posEq(cur, last)`
2. **HEAD** checks `!cm.state.focused` and calls `onFocus(cm)`, while the incoming change calls `ensureFocus(cm)`
3. **HEAD** uses `extendTo(cur)` while the incoming change uses `doSelect(cur)` after updating `last = cur`
4. **HEAD** references `lastPos` while the incoming change uses `last`

Both sides are handling mouse position changes and ensuring focus, but with different function names and slightly different approaches. Without more context about which functions are available and what the intended behavior should be, I cannot safely resolve this conflict.

Here is the code snippet with the conflict preserved:

```javascript

    function extend(e) {
      var curCount = ++counter;
      var cur = posFromMouse(cm, e, true, type == "rect");
      if (!cur) return;
<<<<<<< HEAD
      if (cmp(cur, lastPos) != 0) {
        if (!cm.state.focused) onFocus(cm);
        extendTo(cur);
=======
      if (!posEq(cur, last)) {
        ensureFocus(cm);
        last = cur;
        doSelect(cur);
>>>>>>> e1cfb7fd68e7988f508076063ebc17ddbabe2c92
        var visible = visibleLines(display, doc);
        if (cur.line >= visible.to || cur.line < visible.from)
          setTimeout(operation(cm, function(){if (counter == curCount) extend(e);}), 150);
      } else {
        var outside = e.clientY < editorSize.top ? -20 : e.clientY > editorSize.bottom ? 20 : 0;

```