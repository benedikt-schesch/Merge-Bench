<think>
No reasoning found</think>
Looking at this merge conflict, I need to understand the intent of both sides:

**HEAD (left side)**: Adds logic to abort any pending PJAX XHR requests when hitting back/forward buttons, but only if it's not the initial pop event.

**Other branch (right side)**: Stores the previous state in a variable, presumably for comparison or other logic that follows.

Both changes appear to be addressing different concerns and can coexist. The HEAD change is about canceling pending requests, while the other branch is about tracking state transitions. These are complementary rather than conflicting intentions.

Here's the resolved code:

```javascript
// popstate handler takes care of the back and forward buttons
//
// You probably shouldn't use pjax on pages with other pushState
// stuff yet.
function onPjaxPopstate(event) {

  // Hitting back or forward should override any pending PJAX request.
  if (!initialPop) {
    abortXHR(pjax.xhr)
  }

  var previousState = pjax.state
  var state = event.state

  if (state && state.container) {
    // When coming forward from a separate history session, will get an
    // initial pop with a state we are already at. Skip reloading the current

```