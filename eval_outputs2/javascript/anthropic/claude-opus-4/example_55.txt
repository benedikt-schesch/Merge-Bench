<think>
No reasoning found</think>
Looking at this merge conflict, both sides are trying to achieve the same goal - calling a background script to update settings. The only difference is the method name:

- HEAD uses: `'Settings.set'`
- The incoming branch uses: `'set_settings'`

Without additional context about which naming convention is correct for the codebase, I cannot determine which one should be used. The conflict appears to be a simple naming disagreement rather than a functional difference.

Here is the code snippet with the conflict preserved:

```javascript
            }
            // Listen
            $option.addEventListener('click', async () => {
                document.querySelector(`.settings_dropdown.selected[data-settings="${k}"]`)?.classList?.remove('selected');
                const value = $option.dataset.value;
<<<<<<< HEAD
                await BG.exec('Settings.set', {id: k, value: value});
=======
                await BG.exec('set_settings', {id: k, value: value});
>>>>>>> a9ce98f97aaed5e50c711de3913c3138d4188b24
                $option.classList.add('selected');
                document.querySelector($option.dataset.displays).innerHTML = $option.innerHTML;
            });
        }


```