<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to achieve the same thing - mocking `console.error` - but with a slight difference:

- HEAD assigns the spy to `consoleErrorMock` variable
- The incoming change creates the spy without storing it in a variable

Since the `afterEach` hook references `consoleErrorMock.mockRestore()`, we need to keep the variable assignment from HEAD. This appears to be a case where HEAD has the more complete implementation that's compatible with the cleanup code.

Here's the resolved code:

```javascript
beforeEach(() => {
  jest.resetModules()
  act = require('../pure').act
  asyncAct = require('../act-compat').asyncAct
  React = require('react')
  consoleErrorMock = jest.spyOn(console, 'error').mockImplementation(() => {})
})

afterEach(() => {
  consoleErrorMock.mockRestore()
})

```