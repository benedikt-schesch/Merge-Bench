<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to handle the state update when the encryption mode is changed to "nopass" (no password/no encryption).

The HEAD version only updates the `encryptionMode`, while the incoming change also clears the `password` field and resets `hidePassword` to false. This makes semantic sense - when switching to no encryption, you would want to clear any password-related state.

The incoming change appears to be adding proper cleanup of password-related fields when encryption is disabled, which is the correct behavior.

Here's the resolved version:

```javascript
                  value="nopass"
                  onChange={(e) => {
                    setNetwork({
                      ...network,
                      encryptionMode: e.target.value,
                      password: '',
                      hidePassword: false,
                    });
                  }}
                />
                <label htmlFor="encrypt-none">None</label>
                <input
```