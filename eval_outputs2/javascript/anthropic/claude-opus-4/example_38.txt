<think>
No reasoning found</think>
Looking at this merge conflict, I need to understand the intent of both sides:

**HEAD (current branch)**: Returns `max + (max - self.options.minY) * 0.2`, which appears to be adding 20% of the range (max - minY) to the max value as padding.

**Incoming change**: Takes the maximum of `setMax` and `getMax`, then multiplies by 1.2 twice (resulting in 1.44x), which seems like it might be an error (the duplicate multiplication).

Both sides are trying to add padding/margin to the maximum value for display purposes, but using different approaches. The HEAD version considers the minimum value in its calculation, while the incoming change uses a fixed multiplier.

Since the incoming change has what appears to be a duplicate multiplication (which would result in 44% padding instead of the likely intended 20%), and the HEAD version has a more sophisticated approach that considers the range, I'll resolve in favor of HEAD:

```javascript
            max = current;
          }
        }
      }

      return max + (max - self.options.minY) * 0.2;
    }

    function formatYLabel(value, max, min, numLabels, wholeNumbersOnly, abbreviate) {
      var fixed = (max/numLabels<1 && value!=0 && !wholeNumbersOnly) ? 2 : 0
      var res = value.toFixed(fixed)

```