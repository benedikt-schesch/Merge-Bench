<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to achieve the same semantic goal - disabling something and updating the UI accordingly. The main difference is in the API/method names being used:

- HEAD uses: `Settings.set` and `Icon.set`
- The other branch uses: `set_settings` and `set_icon`

The other branch also has an additional commented line for setting a badge.

Since both sides have the same intent but different API conventions, and without more context about which API version is correct, I should preserve the conflict to avoid making assumptions:

```javascript
                $power_spinning.classList.add('hidden');
                $power_static.classList.remove('hidden');
            }, 1000);
        }
        else {
<<<<<<< HEAD
            await BG.exec('Settings.set', {id: 'enabled', value: false});
            await BG.exec('Icon.set', {status: 'off'});
=======
            await BG.exec('set_settings', {id: 'enabled', value: false});
            await BG.exec('set_icon', 'off');
            // await BG.exec('set_badge', {global: true, text: 'OFF', color: '#FF0000'});
>>>>>>> a9ce98f97aaed5e50c711de3913c3138d4188b24
            $power_btn.classList.add('off');
        }
    });

<<<<<<< HEAD

```