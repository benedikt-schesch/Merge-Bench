<think>
No reasoning found</think>
Looking at this merge conflict, I need to understand what both sides are trying to achieve:

- **HEAD** (left side): Checks if the spec is OAS3 using `system.getSystem().specSelectors.isOAS3()`
- **Right side**: First gets the spec JSON, then checks if it's OAS3 using a helper function `isOAS3Helper(spec)`

Both sides have the same intent - to check if the specification is OAS3 before proceeding. The key difference is in the implementation approach:
- HEAD uses a selector method directly
- The right side retrieves the spec first and uses a helper function

Without more context about which approach is preferred in the codebase or whether `isOAS3Helper` is a necessary addition, I cannot determine which implementation should be used. The conflict represents a genuine ambiguity in the intended implementation.

Here is the same snippet with the conflict preserved:

```javascript

const onlyOAS3 =
  (selector) =>
  (state, ...args) =>
  (system) => {
<<<<<<< HEAD
    if (system.getSystem().specSelectors.isOAS3()) {
=======
    const spec = system.getSystem().specSelectors.specJson()

    if (isOAS3Helper(spec)) {
>>>>>>> 48426836b34aa1659dc4fc453179ef7ce7f19dfa
      const selectedValue = selector(state, ...args)
      return typeof selectedValue === "function"
        ? selectedValue(system)
        : selectedValue
    } else {

```