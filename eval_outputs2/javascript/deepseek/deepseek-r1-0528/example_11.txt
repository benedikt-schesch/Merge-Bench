<think>
No reasoning found</think>
I've analyzed the conflict carefully. The key differences are:
1. The HEAD version declares a top-level `consoleErrorMock` variable and assigns the jest spy to it
2. The incoming branch version removes this variable and directly uses `jest.spyOn(...)` without assignment

Both versions share the same core functionality of mocking `console.error` and filtering out React deprecation warnings. Since there might be important reasons for maintaining the reference to the mock (like potential cleanup/restoration in `afterEach` blocks that aren't shown in this snippet), and because we don't have full context about usage elsewhere in the test file, I've decided to leave the conflict unresolved. The intent is ambiguous without seeing the complete test file.

Here's the exact code with conflict markers preserved:

```javascript
import '@testing-library/jest-dom/extend-expect'

<<<<<<< HEAD
let consoleErrorMock

beforeEach(() => {
  const originalConsoleError = console.error
  consoleErrorMock = jest
=======
beforeEach(() => {
  const originalConsoleError = console.error
  jest
>>>>>>> 487eb851d96406557859524eab3fabae82dd3d18
    .spyOn(console, 'error')
    .mockImplementation((message, ...optionalParams) => {
      // Ignore ReactDOM.render/ReactDOM.hydrate deprecation warning
      if (message.indexOf('Use createRoot instead.') !== -1) {
        return
```