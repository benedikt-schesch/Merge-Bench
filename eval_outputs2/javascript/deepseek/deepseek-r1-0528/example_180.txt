<think>
No reasoning found</think>
Based on the analysis of both changes, here's the resolved snippet:

```javascript
import { isExternal, noop } from '../../util/core.js';
import { on } from '../../util/dom.js';
import { endsWith } from '../../util/str.js';
import { parseQuery, cleanPath, replaceSlug } from '../util.js';
import { History } from './base.js';

function replaceHash(path) {
  const i = location.href.indexOf('#');
  location.replace(location.href.slice(0, i >= 0 ? i : 0) + '#' + path);
}

```

**Resolution reasoning:**
1. The new `endsWith` import from the other branch is preserved as it adds functionality
2. All imports use `.js` extensions to match HEAD branch's style
3. The functional implementation of `replaceHash()` remains unchanged as it was identical in both branches
4. Consistent module path resolution is maintained throughout the file

This resolution:
- Retains the new functionality from the other branch
- Maintains HEAD's file extension convention
- Preserves identical implementation of `replaceHash()`
- Ensures all imports follow the same pattern for consistency