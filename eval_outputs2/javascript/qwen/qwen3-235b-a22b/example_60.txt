<think>
No reasoning found</think>
The merge conflict involves two distinct sets of function calls to achieve enabling features and updating UI elements. Both approaches aim to set a similar state (`enabled: true`, `icon status: 'on'`) but with differing API method names (`Settings.set`/`Icon.set` vs. `set_settings`/`set_icon`). The presence of a commented-out additional feature (`set_badge`) also implies that the second branch may have been under active evolution.

However, **the exact correct function names are not self-evident from the snippet**, and the APIs involved — such as `BG.exec(...)` — are not sufficiently described in the context for definitive resolution. Since the two sides are clearly using different function names that semantically seem equivalent but may in fact represent a version difference or an API evolution, **making a choice between them risks introducing logic errors**.

Therefore, in accordance with the instruction to avoid resolution when the intent is ambiguous, here is the code as-is with the merge conflict preserved:

```javascript
        $power_static.classList.add('hidden');

        if ($power_btn.classList.contains('off')) {
            $power_btn.classList.remove('off');
            $power_spinning.classList.remove('hidden');
<<<<<<< HEAD
            await BG.exec('Settings.set', {id: 'enabled', value: true});
            await BG.exec('Icon.set', {status: 'on'});
=======
            await BG.exec('set_settings', {id: 'enabled', value: true});
            await BG.exec('set_icon', 'on');
            // await BG.exec('set_badge', {global: true, text: 'ON', color: '#00FF00'});
>>>>>>> a9ce98f97aaed5e50c711de3913c3138d4188b24
            last_anim = setTimeout(() => {
                $power_spinning.classList.add('hidden');
                $power_static.classList.remove('hidden');
            }, 1000);
        }
```