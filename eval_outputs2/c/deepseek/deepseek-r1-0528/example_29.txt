<think>
No reasoning found</think>
Based on the provided context and the nature of the conflict, I'm unable to resolve this merge conflict due to ambiguous intent. Both `age_mac()` and `age_subnets()` appear to be contextually valid operations in a networking/routing context, but without additional domain knowledge I can't determine:

1. Whether these are complementary operations that should both be called
2. If one function supersedes/replaces the other
3. Their relative execution order dependencies
4. The architectural significance of "RMODE_SWITCH"

Here's the preserved snippet with the conflict intact:

```c
		if(last_ping_check + pingtimeout < now) {
			check_dead_connections();
			last_ping_check = now;

			if(routing_mode == RMODE_SWITCH)
<<<<<<< HEAD
				age_mac();
=======
				age_subnets();
>>>>>>> af86a3226ea42375644b3f99c182c778d327de1e

			age_past_requests();

			/* Should we regenerate our key? */


```

Resolution requires understanding:
- Whether MAC address aging (L2) and subnet aging (L3) are both needed
- If this project recently refactored networking layers
- The routing mode state machine requirements
- Potential side effects of each aging function

I recommend consulting:
1. The commit messages for both branches
2. Function implementations of age_mac()/age_subnets()
3. Project maintainers familiar with routing mode transitions
4. Any architecture docs about layer2/layer3 handling