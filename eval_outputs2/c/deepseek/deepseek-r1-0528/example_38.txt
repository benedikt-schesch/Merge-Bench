<think>
No reasoning found</think>
I'll resolve this merge conflict by understanding the intent of both branches. The conflict is about when to call `send_del_edge` before deleting an edge. Here's the resolution:

```c

	if(c->socket)
		closesocket(c->socket);

	if(c->edge) {
		if(report && !tunnelserver)
			send_del_edge(broadcast, c->edge);

		edge_del(c->edge);

		/* Run MST and SSSP algorithms */
```

**Resolution reasoning:**
1. The HEAD branch wants to send the deletion report whenever `report` is true
2. The other branch adds an additional condition `!tunnelserver` to prevent sending when in tunnel server mode
3. The logical merge is to combine both conditions with `&&` since:
   - When `tunnelserver` is true, we shouldn't send regardless of `report`
   - When `tunnelserver` is false, we respect the original `report` flag
4. This preserves behavior for normal operation while adding the new tunnel server functionality
5. The rest of the context remains unchanged as it's identical in both branches

The resolution maintains the semantics of both changes: we only send deletion reports when reporting is enabled AND we're not in tunnel server mode.