<think>
No reasoning found</think>
I'll resolve this merge conflict by analyzing the intent of both changes. The conflict involves adding advanced function hooks before the input validation. After careful consideration, I've determined the best resolution is to include both changes while maintaining logical flow.

Here's the resolved code snippet:

```c
}

mraa_result_t
mraa_gpio_dir(mraa_gpio_context dev, gpio_dir_t dir)
{
    if (advance_func.gpio_dir_replace != NULL)
        return advance_func.gpio_dir_replace(dev,dir);
    if (advance_func.gpio_dir_pre != NULL) {
        mraa_result_t pre_ret = (advance_func.gpio_dir_pre(dev,dir));
        if(pre_ret != MRAA_SUCCESS)
            return pre_ret;
    }
    if (dev == NULL) {
        return MRAA_ERROR_INVALID_HANDLE;
    }
    if (dev->value_fp != -1) {
         close(dev->value_fp);
```

**Resolution Reasoning:**
1. The branch `d7c8f2a` adds advanced function hooks (`gpio_dir_replace` and `gpio_dir_pre`) that should execute first to potentially override or augment functionality
2. The HEAD commit's null check (`if (dev == NULL)`) should remain immediately after the hooks as basic input validation
3. Both changes are compatible when ordered this way - hooks first, then validation
4. The advanced functions likely expect to handle null checks themselves if needed
5. No spacing or formatting changes were made to preserve original context