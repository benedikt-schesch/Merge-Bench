<think>
No reasoning found</think>
The conflict centers around whether the function should return a value (`!finished`) before exiting. Since the function signature isn't visible in the snippet, it's impossible to determine if the function is intended to return a value (e.g., `int`) or is `void`. Without knowing the function's return type or the purpose of the `finished` variable, the intent is ambiguous. 

Here's the original snippet with conflicts preserved:

```c
      from_backend(pty->frontend, 0, message, strlen(message));
    }

    notify_remote_exit(pty->frontend);
  }
<<<<<<< HEAD

  return !finished;
=======
>>>>>>> 4348393f562c8011ebca43d6198e98638aa115b5
}

void pty_select_result(int fd, int event)
{
<<<<<<< HEAD

```