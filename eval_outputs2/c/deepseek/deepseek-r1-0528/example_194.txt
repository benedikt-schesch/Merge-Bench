<think>
No reasoning found</think>
I've analyzed the semantic merge conflict and resolved it by combining the changes from both branches. The key insight is that the added hook function should execute after the mmap check but before the file descriptor handling.

Here's the resolved code snippet:

```c
mraa_gpio_write(mraa_gpio_context dev, int value)
{
    if (dev->mmap == 1)
        return mraa_gpio_write_register(dev,value);

    if (advance_func.gpio_write_pre != NULL) {
        mraa_result_t pre_ret = (advance_func.gpio_write_pre(dev,value));
        if(pre_ret != MRAA_SUCCESS)
            return pre_ret;
    }

    if (dev->value_fp == -1) {
        mraa_gpio_get_valfp(dev);
    }
    if (lseek(dev->value_fp, 0, SEEK_SET) == -1) {
        return MRAA_ERROR_INVALID_RESOURCE;
```

Explanation of changes:
1. Kept the mmap check from both branches (identical)
2. Added the `gpio_write_pre` hook from the feature branch
   - This executes only in non-mmap cases
   - Provides pre-write functionality without affecting mmap path
3. Preserved the file descriptor handling from both branches (identical)
4. Maintained all original spacing and formatting

The hook function is placed after the early return for mmap writes but before the standard write path, ensuring it only affects non-mmap operations while maintaining existing functionality.