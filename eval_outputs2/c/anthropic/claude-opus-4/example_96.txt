<think>
No reasoning found</think>
Looking at this merge conflict, I can see that one side (HEAD) has no additional code after the successful snprintf check, while the other side (fc089d5df72a9c0eba5b6f11dffc4f9bafae18b5) adds a line that updates an oldsize pointer with newsize.

Without more context about what `oldsize` and `newsize` represent and whether they're defined in the surrounding code, I cannot determine the correct semantic intent. The conflict appears to be about whether the size should be tracked/updated after a successful vsnprintf operation.

Since the intent is ambiguous without additional context, here is the snippet with the conflict preserved:

```c
    len = vsnprintf(buf + oldlen, size, fmt, ap);
#endif
    if (len >= 0 && len < size) {
      /* This is the C99-specified criterion for snprintf to have
       * been completely successful. */
<<<<<<< HEAD
=======
      *oldsize = newsize;
>>>>>>> fc089d5df72a9c0eba5b6f11dffc4f9bafae18b5
      return buf;
    } else if (len > 0) {
      /* This is the C99 error condition: the returned length is
       * the required buffer size not counting the NUL. */
      size = len + 1;

```