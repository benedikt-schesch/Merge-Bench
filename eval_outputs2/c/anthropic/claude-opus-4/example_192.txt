<think>
No reasoning found</think>
Looking at this merge conflict, I can see that:

1. The HEAD version has a simpler implementation that immediately checks if `dev == NULL`
2. The incoming change (d7c8f2a79431b8f9461597b86ef9f046357404c6) adds support for advance function hooks (`gpio_dir_replace` and `gpio_dir_pre`) before the NULL check

The semantic intent appears to be:
- Both versions want to perform the NULL check
- The incoming change wants to add extensibility through advance function hooks
- The NULL check should happen after the advance function hooks, as the hooks might handle NULL cases differently

Here's the resolved conflict that preserves both intents:

```c
}

mraa_result_t
mraa_gpio_dir(mraa_gpio_context dev, gpio_dir_t dir)
{
    if (advance_func.gpio_dir_replace != NULL)
        return advance_func.gpio_dir_replace(dev,dir);
    if (advance_func.gpio_dir_pre != NULL) {
        mraa_result_t pre_ret = (advance_func.gpio_dir_pre(dev,dir));
        if(pre_ret != MRAA_SUCCESS)
            return pre_ret;
    }
    if (dev == NULL) {
        return MRAA_ERROR_INVALID_HANDLE;
    }
    if (dev->value_fp != -1) {
         close(dev->value_fp);

```