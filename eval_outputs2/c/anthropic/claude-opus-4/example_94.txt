<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to calculate `x` and `y` coordinates by subtracting the window border and dividing by font dimensions. The semantic difference is in how they access the coordinates:

- HEAD uses `ex` and `ey` (likely extracted earlier from the event)
- The incoming change uses `event->x` and `event->y` (directly from the event structure)

Without more context about whether `ex`/`ey` are properly initialized or if there's a reason to prefer one approach over the other, I cannot determine which is the correct resolution. The conflict appears to be about the source of the coordinate data.

Here's the snippet with the conflict preserved:

```c
  }

  if (raw_mouse_mode && act != MA_CLICK && act != MA_RELEASE)
    return TRUE; /* we ignore these in raw mouse mode */

<<<<<<< HEAD
  x = (ex - inst->window_border) / inst->font_width;
  y = (ey - inst->window_border) / inst->font_height;
=======
  x = (event->x - inst->window_border) / inst->font_width;
  y = (event->y - inst->window_border) / inst->font_height;
>>>>>>> fc089d5df72a9c0eba5b6f11dffc4f9bafae18b5

  term_mouse(inst->term,
             button,
             translate_button(button),
             act,

```