<think>
No reasoning found</think>
Looking at this merge conflict, I need to understand the semantic intent of both sides:

1. The HEAD branch adds `open = 1;` before the do-while loop
2. The other branch (4348393f562c8011ebca43d6198e98638aa115b5) removes this line entirely

From the context, this appears to be handling a socket close event (FD_CLOSE). The variable `open` is likely used to track the socket state. Setting `open = 1` before reading outstanding data seems counterintuitive when handling a close event - typically you'd want to mark the socket as closed or closing.

The branch that removes the line appears to have the correct semantic intent for a close handler. Therefore, I'll resolve by accepting the removal of the `open = 1;` line:

```c
    if (bufsize_after < bufsize_before)
      plug_sent(s->plug, bufsize_after);
  } break;
  case FD_CLOSE:
    /* Signal a close on the socket. First read any outstanding data. */
    do {
      ret = p_recv(s->s, buf, sizeof(buf), 0);
      if (ret < 0) {
        err = p_WSAGetLastError();
        if (err == WSAEWOULDBLOCK)

```