<think>
No reasoning found</think>
Looking at this merge conflict, I can see that the HEAD branch adds a return statement (`return !finished;`) while the other branch (4348393f562c8011ebca43d6198e98638aa115b5) removes it or keeps the function without a return.

Without more context about the function signature and what `finished` represents, I cannot definitively resolve this conflict as the intent is ambiguous. The conflict needs to be resolved based on:
1. The function's return type
2. The purpose of the `finished` variable
3. The overall logic flow of the program

Here is the snippet with the conflict preserved:

```c
      from_backend(pty->frontend, 0, message, strlen(message));
    }

    notify_remote_exit(pty->frontend);
  }
<<<<<<< HEAD

  return !finished;
=======
>>>>>>> 4348393f562c8011ebca43d6198e98638aa115b5
}

void pty_select_result(int fd, int event)
{
<<<<<<< HEAD

```