<think>
No reasoning found</think>
Looking at this merge conflict, I need to analyze the semantic intent of both sides.

The conflict is about the return value when `serial` is not found:
- HEAD wants to `return 1`
- The incoming change wants to `return` (void)

To understand the correct resolution, I need to consider the function's return type. Since the HEAD version returns an integer value (1) and includes a comment about "keep going", this suggests the function returns an int where non-zero likely means "continue processing" or "no error, but nothing to do".

The incoming change with just `return;` would only be valid if the function return type was changed to void, but that seems less likely given the context.

Based on the semantic intent (handling a spurious event where we want to keep going), the HEAD version appears correct.

Here's the resolved code:

```c
  int finished = FALSE;

  serial = find234(serial_by_fd, &fd, serial_find_by_fd);

  if (!serial)
    return 1; /* spurious event; keep going */

  if (event == 1) {
    ret = read(serial->fd, buf, sizeof(buf));

    if (ret == 0) {

```