<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to modify the same function signature for `rlogin_receive`. The conflict is about the return type:

- HEAD wants the function to return `int`
- The other branch (4348393f5...) wants the function to return `void`

Without more context about the broader codebase changes, I cannot determine which return type is semantically correct. The intent behind changing the return type could be significant (e.g., error handling changes, API modifications, etc.).

Here is the code snippet with the conflict preserved:

```c
  if (error_msg) {
    /* A socket error has occurred. */
    logevent(rlogin->frontend, error_msg);
    connection_fatal(rlogin->frontend, "%s", error_msg);
  } /* Otherwise, the remote side closed the connection normally. */
<<<<<<< HEAD
  return 0;
}

static int rlogin_receive(Plug plug, int urgent, char *data, int len)
=======
}

static void rlogin_receive(Plug plug, int urgent, char *data, int len)
>>>>>>> 4348393f562c8011ebca43d6198e98638aa115b5
{
  Rlogin rlogin = (Rlogin)plug;
  if (urgent == 2) {
    char c;


```