<think>
No reasoning found</think>
```ruby
      let(:path) { '/does/not/exist' }

      it { expect(subject.exists?(path)).to be(false) }
    end

<<<<<<< HEAD
    it "should create the repo, then update it given multiple successive calls." do
      expect_update_to_clone_repo!
      subject.update!(quiet: false)
      expect(File.directory?(mocked_user_path)).to be true
=======
    context "when the directory does exist" do
      context "but is empty" do
        let(:path) { Fixtures.join('empty_dir') }
>>>>>>> 4ab77a880bd4720881ca02294ce6bf009e278bd3

        before { FileUtils.mkdir(path) }

        it { expect(subject.exists?(path)).to be(false) }


```