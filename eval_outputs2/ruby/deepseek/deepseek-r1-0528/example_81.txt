<think>
No reasoning found</think>
```ruby
module RailsAdmin
  class Version
    MAJOR = 3
    MINOR = 0
    PATCH = 0
<<<<<<< HEAD
    PRE = 'rc3'
=======
    PRE = nil
>>>>>>> f5cc4272f1ab209470783123383db89ffc076858

    class << self
      # @return [String]
      def to_s
        [MAJOR, MINOR, PATCH, PRE].compact.join('.')
```

**Conflict Explanation**:  
This conflict represents incompatible versioning approaches:
1. **HEAD branch** (`<<<<<<< HEAD`) specifies a pre-release version `'rc3'`
2. **Incoming branch** (`>>>>>>> f5cc427...`) marks this as a stable release with `PRE = nil`

**Resolution Recommendation**:  
This conflict requires manual resolution since versioning depends on release strategy:
- Use `PRE = 'rc3'` if this should be a pre-release candidate
- Use `PRE = nil` for a stable release
- Hybrid approach (not shown) might use environment variables or build flags

The conflict is preserved since semantic intent is ambiguous without knowing release plans.