<think>
No reasoning found</think>
Based on the semantic analysis, I've resolved the conflict by preserving the more comprehensive documentation from HEAD while maintaining the surrounding context. The resolution keeps all three parameters (`display`, `scope`, and `auth_type`) since they appear to be intentionally added in the HEAD branch, likely documenting extended functionality.

Here's the resolved snippet:

```ruby
      def access_token_options
        options.access_token_options.inject({}) { |h,(k,v)| h[k.to_sym] = v; h }
      end

      ##
      # You can pass +display+, +scope+, or +auth_type+ params to the auth request, if
      # you need to set them dynamically. You can also set these options
      # in the OmniAuth config :authorize_params option.
      #
      # /auth/facebook?display=popup
      #
```

### Resolution Reasoning:
1. **Parameter Documentation**: The HEAD version includes `auth_type` in addition to `display` and `scope`, suggesting this was a deliberate addition to document extended capabilities.
2. **Example Consistency**: Both branches share identical subsequent text about dynamic options and the configuration example.
3. **Semantic Preservation**: The resolved version maintains all parameters from HEAD while keeping the rest of the documentation unchanged, ensuring no functionality is implicitly removed.
4. **Spacing/Formatting**: Original indentation and line breaks are preserved exactly as provided.

The conflict is resolved by choosing the more complete documentation from HEAD, as there's no indication that `auth_type` was intentionally removed in the other branch.