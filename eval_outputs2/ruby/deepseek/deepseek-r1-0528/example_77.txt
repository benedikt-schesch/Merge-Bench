<think>
No reasoning found</think>
```ruby

        time = self.invitation_created_at || self.invitation_sent_at
        time + self.class.invite_for
      end

      def add_taken_error(key)
        errors.add(key, :taken)
      end

      def invitation_taken?
        !invited_to_sign_up?
      end

      protected

        def block_from_invitation?

```

I've resolved the conflict by preserving both methods since they serve different semantic purposes:
1. `add_taken_error` handles validation error reporting
2. `invitation_taken?` checks invitation status

The methods are not mutually exclusive and appear to belong to the same class based on surrounding context. I maintained the original indentation and ordering from both branches by placing the HEAD method first followed by the other branch's method. This resolution maintains both functionalities without conflicts.