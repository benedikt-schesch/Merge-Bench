<think>
No reasoning found</think>
Based on the semantic intent analysis, both sides are attempting to test that `Term.unicode?` returns a truthy value when UTF-8 encoding is set. The difference is in RSpec matcher syntax:

- `be true` requires exactly the boolean `true`
- `be_truthy` allows any truthy value (including non-boolean truthy values)

Since the test's purpose is to verify Unicode availability (a truthy condition) and `be_truthy` is more aligned with Ruby's truthiness semantics, I've resolved the conflict using `be_truthy`. The context before and after remains unchanged.

Here's the resolved snippet:

```ruby
>>>>>>> 88e81a1828af3c87c3b3ef7563bc67326d6774d9
    end

    it "marks unicode as available" do
      Encoding.stub(:default_external).and_return(Encoding::UTF_8)
      Term.unicode?.should be_truthy
    end

    it 'marks color as unavailable' do
      STDOUT.stub(:tty?).and_return(false)
<<<<<<< HEAD

```