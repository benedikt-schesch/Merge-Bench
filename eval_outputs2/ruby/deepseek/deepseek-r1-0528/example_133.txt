<think>
No reasoning found</think>
```ruby

  def revoke!(klass, *args, **kwargs)
    call_generator!(new_revoke_generator(klass, *args, **kwargs))
  end

  def invoke_then_revoke!(klass, *args, **kwargs, &block)
    invoke! klass, *args, **kwargs, &block
    revoke! klass, *args, **kwargs
  end

  def call_generator!(generator)
    generator.invoke_all
```

**Resolution Reasoning:**
1. The conflicting change adds a block argument (`&block`) to `invoke_then_revoke!` which is passed to `invoke!`
2. The block is needed for `invoke!` but irrelevant for `revoke!` (consistent with both versions)
3. The block parameter must be included in the method signature to support block-based use cases
4. The call to `revoke!` remains unchanged as it doesn't require the block
5. Both branches' core intents are preserved: invoking with full arguments (including blocks) followed by revocation

The resolved version maintains backward compatibility while adding new functionality for block support.