<think>
No reasoning found</think>
Looking at this merge conflict, both sides are trying to set a default value of 3 for the `max_failures` option when creating a `NodeWatcher`. The semantic intent is the same - provide a default value if `max_failures` is not specified in the options.

The HEAD version uses `@options.fetch(:max_failures, 3)` which is more idiomatic Ruby and handles the case cleanly when the key is missing.

The other version uses `@options[:max_failures] || 3` which could potentially have issues if `max_failures` is explicitly set to `false` or `nil` (it would use 3 instead of the provided value).

Since `fetch` with a default value is the more robust and idiomatic approach for this use case, I'll resolve in favor of the HEAD version:

```ruby
    end

    # Spawns the {RedisFailover::NodeWatcher} instances for each managed node.
    def spawn_watchers
      @watchers = [@master, @slaves, @unavailable].flatten.compact.map do |node|
        NodeWatcher.new(self, node, @options.fetch(:max_failures, 3))
      end
      @watchers.each(&:watch)
    end

    # Searches for the master node.

```