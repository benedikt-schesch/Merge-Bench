<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to include JavaScript files, but with different approaches:

- **HEAD (current branch)**: Uses a dynamic approach that loads all `.js` files from the public directory, sorted alphabetically
- **Incoming changes**: Explicitly lists specific JavaScript files (jquery-1.2.3.min.js, jquery.hotkeys.js, to-title-case.js)

The semantic intent of both sides is to include JavaScript files needed for the application. The conflict arises from different philosophies:
- HEAD wants automatic inclusion of all JS files
- The incoming changes want explicit control over which files are loaded and in what order

Since both approaches have merit but are incompatible, and the specific requirements (whether order matters, whether all files should be included, etc.) are ambiguous, I cannot determine which approach is correct without more context.

```ruby
!!! strict
%html
  %head
    %title= title
    %link{:rel => 'stylesheet', :href => '/_stylesheet.css', :type => 'text/css'}
<<<<<<< HEAD
    - Dir[Sinatra.application.options.public + '/*.js'].sort.each do |lib|
      %script{:src => "/#{File.basename(lib)}", :type => 'text/javascript'}
=======
    %script{:src => '/jquery-1.2.3.min.js', :type => 'text/javascript'}
    %script{:src => '/jquery.hotkeys.js', :type => 'text/javascript'}
    %script{:src => '/to-title-case.js', :type => 'text/javascript'}
>>>>>>> fe9fa4295e18f94591c62effe26d900dff571613
    :javascript
      $(document).ready(function() {
        $.hotkeys.add('Ctrl+h', function() { document.location = '/#{Homepage}' })
        $.hotkeys.add('Ctrl+l', function() { document.location = '/_list' })


```