<think>
No reasoning found</think>
Looking at this merge conflict, I can see that the HEAD branch is trying to add a new test for the `auth_type` parameter, while the other branch (d2f099d) doesn't have this test. The conflict appears to be a simple addition where HEAD wants to include an extra test between two existing tests.

Since both sides seem to have valid intentions (HEAD wants to add a test, the other branch just doesn't have it), and the added test follows the same pattern as the surrounding tests, the semantic intent is clear: include the new test for `auth_type` parameter handling.

Here's the resolved conflict:

```ruby
    @request.stubs(:params).returns({ 'display' => 'touch' })
    assert strategy.authorize_params.is_a?(Hash)
    assert_equal 'touch', strategy.authorize_params[:display]
  end

  test 'includes auth_type parameter from request when present' do
    @request.stubs(:params).returns({ 'auth_type' => 'reauthenticate' })
    assert strategy.authorize_params.is_a?(Hash)
    assert_equal 'reauthenticate', strategy.authorize_params[:auth_type]
  end

  test 'overrides default scope with parameter passed from request' do
    @request.stubs(:params).returns({ 'scope' => 'email' })
    assert strategy.authorize_params.is_a?(Hash)
    assert_equal 'email', strategy.authorize_params[:scope]
  end

```