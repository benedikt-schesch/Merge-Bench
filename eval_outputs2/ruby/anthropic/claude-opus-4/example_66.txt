<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to achieve the same goal - removing whitespace after semicolons and opening braces in CSS - but using different regex approaches.

The HEAD version uses:
- `([;{]) *\n` - captures semicolon or brace, then replaces the whole match with just the captured character
- `([;{]) +` - same pattern for spaces

The incoming version uses:
- `(<=[;{]) *\n` - attempts to use a lookbehind assertion to match whitespace after semicolon/brace
- `(<=[;{]) +` - same pattern for spaces

However, the incoming version has a syntax error. The correct Ruby lookbehind syntax would be `(?<=[;{])`, not `(<=[;{])`.

Since both versions aim to achieve the same result (removing whitespace after semicolons and braces), and the HEAD version has correct syntax while the incoming version has a syntax error, I'll resolve this by keeping the HEAD version:

```ruby
    # TEMPLATE CSS LOADING

    def inline_stylesheet(name, media='all')
      path = File.expand_path("../template/#{name}.css", __FILE__)
      data = File.read(path)
      data.gsub!(/([;{]) *\n/m, '\1')
      data.gsub!(/([;{]) +/m, '\1')
      data.gsub!(/[; ]+\}/, '}')
      data.gsub!(/^/, '  ')
      "<style type='text/css' media='#{media}'>\n#{data}  </style>"
    end


```