<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to achieve the same semantic intent but with different syntax approaches:

1. **First difference**: Both sides want to validate `check_duplicate` on create only
   - HEAD uses the older Rails syntax: `validate_on_create`
   - The incoming change uses the newer Rails syntax: `validate` with `:on => :create`

2. **Second difference**: In the `validates_presence_of :body` validation
   - HEAD includes an additional condition: `or c.google_docs.any?`
   - The incoming change doesn't have this condition

The semantic intent appears to be:
- Use the newer Rails validation syntax (from the incoming change)
- Keep the additional `google_docs` condition (from HEAD)

Here's the resolved code:

```ruby
  scope :latest, :order => 'id DESC'

  # TODO: investigate how we can enable this and not break nested attributes
  # validates_presence_of :target_id, :user_id, :project_id
  
  validate :check_duplicate, :if => lambda { |c| c.target_id? and not c.hours? }, :on => :create
  validates_presence_of :body, :unless => lambda { |c| c.task_comment? or c.uploads.to_a.any? or c.google_docs.any? }

  # was before_create, but must happen before format_attributes
  before_save   :copy_ownership_from_target, :if => lambda { |c| c.new_record? and c.target_id? }
  after_create  :trigger_target_callbacks
  after_destroy :cleanup_activities, :cleanup_conversation

```