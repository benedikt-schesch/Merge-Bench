<think>
No reasoning found</think>
```typescript
import * as common from '../types'

type BaseChannelDefinition = common.BaseIntegration['channels'][string]
type GetChannelByName<
  TIntegration extends common.BaseIntegration,
<<<<<<< HEAD
  TChannelName extends keyof TIntegration['channels']
> = utils.Cast<TIntegration['channels'][TChannelName], BaseChannelDefinition>
=======
  TChannelName extends keyof TIntegration['channels'],
> = utils.Cast<TIntegration['channels'][TChannelName], common.ChannelDefinition>
>>>>>>> 2df15ac6924fdfb93d9f36cc4acbbb1042845bc6

/**
 * @deprecated Integration's should no longer use their name as prefix for event types or tags.
 */
type WithRequiredPrefix<TTags extends string, TPrefix extends string> = string extends TTags

```