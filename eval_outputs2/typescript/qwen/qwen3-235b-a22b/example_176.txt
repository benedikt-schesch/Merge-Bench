<think>
No reasoning found</think>
The merge conflict arises between two branches modifying the same region of the class. One branch (HEAD) appears to have omitted the `private closeTimer` declaration, while the other has explicitly added this declaration to the class body between the `tokens` property and the `channels` declaration.

---

From a semantic perspective, the intent of adding the `private closeTimer` line (branch `e0ec8d42`) is clear: a new private class member is being introduced, likely to manage behavior related to a timer, such as delaying cleanup. This is consistent with typical class structure and usage patterns in TypeScript. Since no conflicting declaration exists in the HEAD branch, and assuming preservation of all contributed functionality is the goal, it is reasonable to accept and retain the addition.

---

**Resolved Snippet** (Conflict resolved semantically, spacing and full context preserved):

```typescript
  CalendarClient | Promise<CalendarClient>
  >()

  private readonly syncHistory: Collection<SyncHistory>
  private readonly tokens: Collection<Token>
  private closeTimer: NodeJS.Timeout | undefined = undefined
  private channels = new Map<Ref<Channel>, Channel>()
  private readonly calendarsByGoogleId = new Map<PersonId, ExternalCalendar[]>()
  readonly calendars = {
    byId: new Map<Ref<ExternalCalendar>, ExternalCalendar>(),
    byExternal: new Map<string, ExternalCalendar[]>()
```