<think>
No reasoning found</think>
Here is the code snippet with the conflict unresolved, since the semantic intent between the two versions is ambiguous without further context on whether `preventDefault` should be an external configuration point or not.

```typescript
};

export default function useKeyboardListener(
  keys: string[],
  listener: (key: string | null, modifiers: KeyModifiers) => void,
<<<<<<< HEAD
  preventDefault: boolean = true,
=======
>>>>>>> 21c12d118b819f4428ce2120091f1cd1f4f84cbc
) {
  const keyDownListener = useCallback(
    (e: KeyboardEvent) => {
      // @ts-expect-error we know this field exists
      if (!e || e.target.tagName == "INPUT") {

```