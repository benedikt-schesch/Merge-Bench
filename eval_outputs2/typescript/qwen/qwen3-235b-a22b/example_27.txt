<think>
No reasoning found</think>
Here's the resolved merge conflict with full context preserved:

```typescript
              <span className="capitalize">
                {updaterState === "checking-for-update" &&
                  t("checkingForUpdate")}
                {updaterState === "update-available" && t("updateAvailable")}
                {updaterState === "update-downloaded" && t("quitAndInstall")}
                {(!updaterState || updaterState === "error") &&
                  t("checkUpdate")}
              </span>
            </DropdownMenuItem>
          </DropdownMenuContent>
        </DropdownMenu>
      </div>
```

The conflict was resolved by choosing the condition structure that properly evaluates to a boolean expression before rendering:
`{(!updaterState || updaterState === "error") && t("checkUpdate")}`

This ensures proper JSX rendering because:
1. Logical OR (`||`) evaluates to the first truthy value (which could be a boolean)
2. Logical AND (`&&`) only renders the translation text when the condition is true
3. This matches the pattern used in the other conditional renders in the component