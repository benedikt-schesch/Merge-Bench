<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to import similar modules but with some differences:

- HEAD imports: `Avatar, ChannelStore, Clickable, IconUtils, RelationshipStore, ScrollerThin, useMemo, UserStore`
- The other branch imports the same plus `Text`, and also imports `Channel, User` from a different source

The semantic intent appears to be:
1. Both sides want to import common webpack modules
2. The other branch added `Text` to the imports (likely needed for some new functionality)
3. There's a duplicate import of `Channel, User` types - one from `@vencord/discord-types` (line 4) and another from `discord-types/general` (in the conflicted section)

The resolution should include `Text` from the other branch while avoiding the duplicate type imports (keeping the one from `@vencord/discord-types` which appears earlier in the file).

```typescript
import { isNonNullish } from "@utils/guards";
import { Logger } from "@utils/Logger";
import definePlugin from "@utils/types";
import { Channel, User } from "@vencord/discord-types";
import { findByPropsLazy, findComponentByCodeLazy } from "@webpack";
import { Avatar, ChannelStore, Clickable, IconUtils, RelationshipStore, ScrollerThin, Text, useMemo, UserStore } from "@webpack/common";
import { JSX } from "react";

const SelectedChannelActionCreators = findByPropsLazy("selectPrivateChannel");
const UserUtils = findByPropsLazy("getGlobalName");


```