<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to call `this.onAuth` but with different parameters:

- HEAD version: `this.onAuth(client, joinOptions, authContext)`
- Incoming version: `this.onAuth(client, joinOptions, req)` (wrapped in a try block)

The key difference is the third parameter: `authContext` vs `req`. Without knowing the broader context of the codebase changes, it's unclear which parameter is correct or if this represents a breaking API change.

Since I cannot determine the correct intent without more context about what changes led to this conflict, I'm returning the snippet with the conflict markers intact:

```typescript
      try {
        if (authData) {
          client.auth = authData;

        } else if (this.onAuth !== Room.prototype.onAuth) {
<<<<<<< HEAD
          client.auth = await this.onAuth(client, joinOptions, authContext);
=======
          try {
            client.auth = await this.onAuth(client, joinOptions, req);
>>>>>>> 1a7da98cbeee551587e6119d06a39a441421827b

            if (!client.auth) {
              throw new ServerError(ErrorCode.AUTH_FAILED, 'onAuth failed');
            }
```