<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to achieve similar goals but with some differences:

**HEAD (left side):**
- Defines `EXEC_PATH` as a separate variable
- Uses a simple `tsconfig.json` file
- Only defines `BIN_EXEC`

**Incoming changes (right side):**
- Conditionally selects between `tsconfig.json5` and `tsconfig.json` based on TypeScript version
- Inlines the exec path in `BIN_EXEC`
- Also defines `SCRIPT_EXEC` for an additional executable

The semantic intent appears to be:
1. Both want to define paths for test execution
2. The incoming changes add version-specific configuration file selection
3. The incoming changes add support for an additional script executable

Here's the resolved version that combines both intents:

```typescript
import ts = require('typescript')
import proxyquire = require('proxyquire')
import { register, create, VERSION } from './index'

const TEST_DIR = join(__dirname, '../tests')
const EXEC_PATH = join(__dirname, '../dist/bin')
const PROJECT = join(TEST_DIR, semver.gte(ts.version, '2.5.0') ? 'tsconfig.json5' : 'tsconfig.json')
const BIN_EXEC = `node "${EXEC_PATH}" --project "${PROJECT}"`
const SCRIPT_EXEC = `node "${join(__dirname, '../dist/script')}"`

const SOURCE_MAP_REGEXP = /\/\/# sourceMappingURL=data:application\/json;charset=utf\-8;base64,[\w\+]+=*$/

describe('ts-node', function () {
  this.timeout(10000)

```