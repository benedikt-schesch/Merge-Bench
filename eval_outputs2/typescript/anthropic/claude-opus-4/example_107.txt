<think>
No reasoning found</think>
Looking at this merge conflict, I can see that the `HEAD` version has the basic room properties (`#_roomId` and `#_roomName`), while the incoming branch adds two new private properties:
- `#_autoDispose: boolean = true;` - likely controls automatic disposal/cleanup behavior
- `#_onLeaveConcurrent: number = 0;` - tracks concurrent onLeave operations

Both changes appear to be additive and complementary - the incoming branch is extending the class with additional private properties for managing room lifecycle and concurrent operations. There's no semantic conflict between these additions.

Here's the resolved code:

```typescript
   */
  public clock: Clock = new Clock();

  #_roomId: string;
  #_roomName: string;
  #_autoDispose: boolean = true;
  #_onLeaveConcurrent: number = 0; // number of onLeave calls in progress

  /**
   * Maximum number of clients allowed to connect into the room. When room reaches this limit,
   * it is locked automatically. Unless the room was explicitly locked by you via lock() method,
   * the room will be unlocked as soon as a client disconnects from it.

```