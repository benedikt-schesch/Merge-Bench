<think>
No reasoning found</think>
Looking at this merge conflict, I can see that the HEAD branch is trying to add several imports that were likely removed or not present in the other branch. The conflict appears to be about whether these imports should be included.

Analyzing the semantics:
- Both sides have the same imports at the top (crypto, Metadata, PropsWithChildren, AuthProvider, PostHogProvider, Providers)
- HEAD wants to add: PublicEnvContext, S3_BUCKET_URL, and getBootstrapData
- HEAD also has duplicate imports (PropsWithChildren and crypto are already imported above)
- The other branch (afcd32adc8e8dbe9fc833799825a291a98e4c931) has these imports removed/clean

The intent seems to be that HEAD wants to add new functionality requiring PublicEnvContext, S3_BUCKET_URL, and getBootstrapData, but it mistakenly duplicated some imports. The resolution should include the new imports but remove the duplicates.

Here's the resolved code:

```typescript
import crypto from "crypto";
import type { Metadata } from "next";
import { PropsWithChildren } from "react";
import { AuthProvider } from "./AuthProvider";
import { PostHogProvider, Providers } from "./providers";
import { PublicEnvContext } from "@/utils/public-env";
import { S3_BUCKET_URL } from "@cap/utils";
import { getBootstrapData } from "@/utils/getBootstrapData";
//@ts-expect-error
import { script } from "./themeScript";

export const metadata: Metadata = {
  title: "Cap â€” Beautiful screen recordings, owned by you.",

```