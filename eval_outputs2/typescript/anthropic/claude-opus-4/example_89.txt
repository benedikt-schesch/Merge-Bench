<think>
No reasoning found</think>
Looking at this merge conflict, both sides are trying to destructure values from `useSettingStore()`. The HEAD branch only extracts `sync` and `apiKey`, while the incoming branch adds two additional properties: `githubUsername` and `repositoryName`.

Since this appears to be an additive change where the incoming branch is extending the functionality by including GitHub-related settings, the semantic intent is to have all four properties available. The resolution should include all properties from both sides.

```typescript
import { listen } from '@tauri-apps/api/event';

export function ClipboardImage() {
  const [image, setImage] = useState('')
  const { currentTagId, fetchTags, getCurrentTag } = useTagStore()
  const { sync, apiKey, githubUsername, repositoryName } = useSettingStore()
  const { fetchMarks, addQueue, setQueue, removeQueue } = useMarkStore()
  async function read() {
    try{
      const image = await clipboard.readImageBase64()
      await clipboard.clear()

```