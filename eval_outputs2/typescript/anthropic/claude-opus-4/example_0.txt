<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to import from 'react', but with different sets of imports. The HEAD branch is importing `createElement`, `Fragment`, and `ReactNode`, while the other branch is importing a more extensive set including `createContext`, `useContext`, `Context`, `ProviderProps`, and `ReactElement`.

Since both sides need React imports and they're not conflicting (just different subsets), I'll merge them together, keeping all unique imports from both sides:

```typescript
import { map } from 'nanostores'
import {
  createContext,
  createElement,
  Fragment,
  useContext,
  type Context,
  type ProviderProps,
  type ReactElement,
  type ReactNode
} from 'react'
import { debugEnabled } from '../../debug'
import { error } from '../../errors'
import type { AdapterInterface, UseAdapterHook } from './defs'

export type AdapterContext = {

```