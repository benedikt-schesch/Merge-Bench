<think>
No reasoning found</think>
Looking at this merge conflict, I need to understand the semantic intent of both sides:

**HEAD (current branch)**: Uses `_providedIndex` to determine initial position, setting it to `sheetHeight` if the index is negative, otherwise using the corresponding snap point.

**Incoming changes**: Uses `initialSnapIndex` instead of `_providedIndex` and adds an additional condition `animateOnMount` to the logic. If either `initialSnapIndex < 0` OR `animateOnMount` is true, it sets to `sheetHeight`.

The semantic intent appears to be:
1. Both sides want to determine an initial position for a sheet/modal component
2. The incoming changes introduce a new feature (`animateOnMount`) that affects the initial positioning
3. The incoming changes also renamed the variable from `_providedIndex` to `initialSnapIndex` (likely for clarity)

Since the incoming changes add functionality (the `animateOnMount` feature) while maintaining the original logic, and also improve naming clarity, the resolution should accept the incoming changes:

```typescript
        ),
        sheetHeight: maxSnapPoint,
      };
    }, [_providedSnapPoints, topInset]);
    const initialPosition = useMemo(() => {
      return initialSnapIndex < 0 || animateOnMount
        ? sheetHeight
        : snapPoints[initialSnapIndex];
    }, [initialSnapIndex, animateOnMount, sheetHeight, snapPoints]);

    // content wrapper
    const contentWrapperGestureRef = useRef<TapGestureHandler>(null);
    const contentWrapperGestureState = useSharedValue<State>(
      State.UNDETERMINED
```