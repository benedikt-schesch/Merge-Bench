<think>
No reasoning found</think>
Looking at this merge conflict, I need to understand the semantic intent of both sides:

- HEAD wants to use `email` for the `externalUser` field
- The incoming change wants to use `me` for the `externalUser` field

Without additional context about what `email` and `me` represent in this codebase, and what the `externalUser` field expects, I cannot determine which is the correct semantic intent. Both could be valid depending on:
- Whether `email` is a string or an object
- Whether `me` is a user object or identifier
- What type the `externalUser` field expects

Since the intent is ambiguous without more context, I'm returning the snippet with the conflict preserved:

```typescript
        const data: Data<ExternalCalendar> = {
          name: val.summary ?? '',
          visibility: 'freeBusy',
          hidden: false,
          externalId: val.id,
<<<<<<< HEAD
          externalUser: email,
=======
          externalUser: me,
>>>>>>> e0ec8d420647866ae4cfd29946496b49106838ce
          default: false
        }
        if (val.primary === true) {
          const primaryExists = await this.client.findOne(
            calendar.class.ExternalCalendar,
```