<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to access properties from `useBottomSheetInternal()`, but they're taking different approaches:

- HEAD wants a single `contentPanGestureHandler` property
- The incoming branch wants multiple individual properties related to pan gesture handling

Without more context about the broader refactoring or the intent behind these changes, I cannot definitively determine which approach is correct or if both sets of properties are needed. The conflict appears to be a fundamental architectural difference in how the pan gesture handling is structured.

Here's the snippet with the conflict preserved:

```typescript
  const panGestureRef = useRef<PanGestureHandler>(null);

  // hooks
  const {
    rootTapGestureRef,
<<<<<<< HEAD
    contentPanGestureHandler
=======
    handlePanGestureState,
    handlePanGestureTranslationY,
    handlePanGestureVelocityY,
    contentPanGestureState,
    contentPanGestureTranslationY,
    contentPanGestureVelocityY,
>>>>>>> e359b130b8e1256ed3e66e8da178cd6f3845475f
  } = useBottomSheetInternal();

  // variables
  const simultaneousHandlers = useMemo(
    () =>
```