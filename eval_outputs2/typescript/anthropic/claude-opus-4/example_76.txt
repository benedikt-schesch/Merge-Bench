<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to import types, but with different sets of imports. The HEAD branch is importing types related to Zod, Anthropic responses, and OpenAI resources, while the incoming branch is importing a more minimal set including ClientOptions.

Since both sides seem to have valid imports they need, and there's no direct conflict in what they're importing (they're adding different types), the semantic intent appears to be to include all the necessary imports from both sides.

Here's the resolved version:

```typescript
import { ZodType } from "zod";
import {
  AnthropicTransformedResponse,
  AvailableModel,
  ClientOptions,
  ToolCall,
} from "../../types/model";
import {
  ChatCompletion,
  ChatCompletionToolChoiceOption,
} from "openai/resources";

export interface ChatMessage {
  role: "system" | "user" | "assistant";
  content: ChatMessageContent;
}

```