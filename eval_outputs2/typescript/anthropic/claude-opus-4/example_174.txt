<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to define the interface for `WatchBase`, but with slightly different type definitions for the same fields:

- **HEAD** wants to use `PersonId` for `userId` and `WorkspaceUuid` for `workspace`
- **The incoming change** wants to use `Ref<Account>` for `userId` and `string` for `workspace`

Based on the imports at the top of the file, we can see that `PersonId` and `WorkspaceUuid` are already imported from `@hcengineering/core`, which suggests these are the intended domain-specific types for this codebase. The incoming change appears to be using more generic types (`Ref<Account>` which isn't imported, and plain `string`).

Given that the more specific types are already imported and the HEAD version aligns with the existing import structure, I'll resolve in favor of HEAD:

```typescript
import type { PersonId, Timestamp, WorkspaceUuid } from '@hcengineering/core'
import type { NextFunction, Request, Response } from 'express'
import type { Credentials } from 'google-auth-library'

export interface WatchBase {
  userId: PersonId
  workspace: WorkspaceUuid
  expired: Timestamp
  channelId: string
  resourceId: string
  calendarId: string | null
}

```