<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to achieve the same semantic intent - they want to check if the system is NOT in a shutdown state before persisting stats and performing cleanup operations.

- HEAD uses: `if (state !== MatchMakerState.SHUTTING_DOWN)`
- The incoming change uses: `if (!isGracefullyShuttingDown)`

Both conditions are checking for the same thing (not shutting down) but using different variables. Since the incoming change appears to be using a more descriptive boolean variable name, and HEAD has an extra `stats.local.roomCount--;` that's already present above the conflict, the resolution should use the incoming change's condition while removing the duplicate decrement.

Here's the resolved code:

```typescript
  //
  room.listing.remove();
  stats.local.roomCount--;

  // decrease amount of rooms this process is handling
  if (!isGracefullyShuttingDown) {
    stats.persist();

    // remove from devMode restore list
    if (isDevMode) {
      await presence.hdel(getRoomRestoreListKey(), room.roomId);

```