<think>
No reasoning found</think>
The merge conflict involves differences in the order of lifetime parameters for the `ChildBuilder` impl block and method signature. Since the order of lifetimes (`'w`, `'s`, `'a`) is significant in Rust and affects type compatibility, it's ambiguous which order is correct without seeing the struct definition for `ChildBuilder`. 

The struct's definition (not provided in the snippet) determines the required order of lifetimes in its impl blocks. Since we can't verify which branch matches the struct's lifetime order, the conflict must be preserved.

Resolved code (with conflict preserved):
```rust
            }
        }
    }
}

<<<<<<< HEAD
impl<'w, 's, 'a> ChildBuilder<'w, 's, 'a> {
    pub fn spawn_bundle(&mut self, bundle: impl Bundle) -> EntityCommands<'w, 's, '_> {
=======
impl<'s, 'w, 'a> ChildBuilder<'s, 'w, 'a> {
    pub fn spawn_bundle(&mut self, bundle: impl Bundle) -> EntityCommands<'s, 'w, '_> {
>>>>>>> 65e834ce8d5142f1a01d06c2a9e4e7ef4a1238a9
        let e = self.commands.spawn_bundle(bundle);
        self.push_children.children.push(e.id());
        e
    }


```