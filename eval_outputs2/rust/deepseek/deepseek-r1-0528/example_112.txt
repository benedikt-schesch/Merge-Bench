<think>
No reasoning found</think>
The conflict arises from differences in documenting supported platforms and adding a nightly feature. The resolution combines both changes:

1. Keeps the unchecked macOS 32-bit item from the incoming branch
2. Uses the checked macOS 64-bit item from the current branch (HEAD)
3. Preserves the nightly feature comment and `use` statement from the incoming branch

Here's the resolved code:

```rust
//!
//! - [x] Windows 32 bit
//! - [x] Windows 64 bit
//! - [x] Linux 32 bit
//! - [x] Linux 64 bit
//! - [ ] MacOS 32 bit
//! - [x] MacOS 64 bit
//!
//! This script also creates a "nightly" feature if the crate is compiled on a nightly branch
use rustc_version::{version_meta, Channel};

pub const MKL_VERSION: &str = "2022.1.0";
pub const STATIC: bool = cfg!(feature = "mkl-static-seq") || cfg!(feature = "mkl-static-iomp");
pub const DYNAMIC: bool = cfg!(feature = "mkl-dynamic-seq") || cfg!(feature = "mkl-dynamic-iomp");
pub const SEQUENTIAL: bool = cfg!(feature = "mkl-static-seq") || cfg!(feature = "mkl-dynamic-seq");

```