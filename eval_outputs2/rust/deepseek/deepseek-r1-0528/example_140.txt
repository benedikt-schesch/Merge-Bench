<think>
No reasoning found</think>
Here's the resolved snippet with the conflict addressed. The resolution preserves the more recent API change (`.visit_mut_with`) while maintaining the additional `param.module_id` parameter added in the incoming change. The `unresolved_mark` was removed since it appears the transformer API was updated to only require `top_level_mark`:

```rust
      farmfe_core::module::ModuleType::Js => {}
      farmfe_core::module::ModuleType::Jsx => {
        // Do nothing, jsx should be handled by other plugins
      }
      farmfe_core::module::ModuleType::Ts => {
        program.visit_mut_with(&mut typescript(
          default_config(&context.config.script, param.module_id),
          top_level_mark,
        ));
      }
      farmfe_core::module::ModuleType::Tsx => {
        let comments: SingleThreadedComments = param.meta.as_script().comments.clone().into();
```

**Resolution rationale:**
1. `.visit_mut_with` is the updated API method (from the incoming change)
2. `default_config` now includes `param.module_id` (from incoming change)
3. `top_level_mark` is preserved as the sole mark parameter
4. The removed `unresolved_mark` suggests the transformer API was simplified in the incoming branch
5. Both changes are semantically compatible and address the same functional area

The resolution maintains compatibility with both changes while adopting the more recent API patterns introduced in the incoming branch.