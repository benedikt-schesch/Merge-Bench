<think>
No reasoning found</think>
The conflict arises because one branch requires `T: Resource` while the other requires `T: Component`. Considering the surrounding context shows `events` is a `ResMut<Events<T>>`, which in Bevy typically requires `T: Resource` since events are stored as resources. The `EventWriter` API also matches Bevy's event system design.

Here's the resolved snippet:

```rust
    events: ResMut<'w, Events<T>>,
    #[system_param(ignore)]
    marker: PhantomData<&'s usize>,
}

impl<'w, 's, T: Resource> EventWriter<'w, 's, T> {
    pub fn send(&mut self, event: T) {
        self.events.send(event);
    }

    pub fn send_batch(&mut self, events: impl Iterator<Item = T>) {
```