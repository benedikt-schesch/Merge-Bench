<think>
No reasoning found</think>
```rust
    frame_count: f64,
}

impl Plugin for FrameTimeDiagnosticsPlugin {
    fn build(&self, app: &mut bevy_app::App) {
        app.add_startup_system(Self::setup_system)
            .insert_resource(FrameTimeDiagnosticsState { frame_count: 0.0 })
            .add_system(Self::diagnostic_system);
    }
}


```

The conflict arises from different Bevy API usage patterns. Both versions intend to register `setup_system` as a startup system, but use different syntax:
1. HEAD version uses direct function reference (`Self::setup_system`)
2. Other branch uses legacy `.system()` method (`Self::setup_system.system()`)

Since the surrounding code uses direct function references for:
- `.add_system(Self::diagnostic_system)`
and the modern Bevy API accepts direct function references, resolving by using the HEAD version maintains consistency with the existing pattern while being idiomatic for current Bevy versions. The `.system()` method is redundant in modern Bevy.