<think>
No reasoning found</think>
The conflict arises from concurrent changes to the match arms handling `PubGrubPackage` variants. The resolution incorporates both changes semantically:

1. The `PubGrubPackage::Extra` variant handler from the other branch is preserved since it's a new case not present in HEAD
2. The `PubGrubPackage::Package` variants are preserved from HEAD since they include the `_source` field (a recent addition)
3. Both progress reporting cases (`Some(url)` and `None`) are maintained with their correct signatures

Here's the resolved snippet:

```rust
    fn on_progress(&self, package: &PubGrubPackage, version: &Version) {
        if let Some(reporter) = self.reporter.as_ref() {
            match package {
                PubGrubPackage::Root(_) => {}
                PubGrubPackage::Python(_) => {}
                PubGrubPackage::Extra(_, _, _) => {}
                PubGrubPackage::Package(package_name, _extra, Some(url), _source) => {
                    reporter.on_progress(package_name, &VersionOrUrl::Url(url));
                }
                PubGrubPackage::Package(package_name, _extra, None, _source) => {
                    reporter.on_progress(package_name, &VersionOrUrl::Version(version));
                }
```