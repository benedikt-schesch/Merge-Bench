<think>
No reasoning found</think>
The merge conflict involves the function parameter name in the `setup_app` function signature. Both branches define the same function with identical functionality, but use different parameter names (`app_builder` vs `app`). Since the function body doesn't use this parameter in the visible portion of the code, and we can't see the full context of how the parameter is used later in the function, the intent is ambiguous.

The conflict should be preserved since:
1. We don't have visibility into how the parameter is used later in the function
2. There's no semantic difference between the two versions in the visible context
3. The parameter name change might be meaningful if referenced in the function body

Here's the unchanged snippet with conflict markers preserved:

```rust
        }
    }
    *current_frame += 1;
}

<<<<<<< HEAD
pub(crate) fn setup_app(app_builder: &mut App) -> &mut App {
=======
pub(crate) fn setup_app(app: &mut App) -> &mut App {
>>>>>>> 65e834ce8d5142f1a01d06c2a9e4e7ef4a1238a9
    let filename =
        std::env::var("CI_TESTING_CONFIG").unwrap_or_else(|_| "ci_testing_config.ron".to_string());
    let config: CiTestingConfig = ron::from_str(
        &std::fs::read_to_string(filename).expect("error reading CI testing configuration file"),
    )
```