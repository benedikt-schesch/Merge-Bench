<think>
No reasoning found</think>
The conflict arises from one branch adding a new `as_text()` method while the other branch doesn't include this addition. The resolution keeps the new method since it's a clear additive change that doesn't conflict with the other branch's context. The method provides useful functionality for converting context to text.

Here's the resolved snippet:

```rust

    #[allow(dead_code)]
    pub(crate) fn insert_summary(&self, _summary: &str) -> Context {
        todo!()
    }

    /// Converts the context to textual format
    pub fn as_text(&self) -> String {
        todo!()
    }
}

#[async_trait]
pub trait ContextRepository {
    /// Get the context for the current path

```