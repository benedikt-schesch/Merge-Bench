<think>
No reasoning found</think>
```rust
    }
}

#[cfg(test)]
mod tests {
<<<<<<< HEAD
    use crate as bevy_ecs;
    use crate::component::Component;
    use crate::storage::Storages;
    use crate::{component::Components, entity::Entity, storage::Table};
    #[derive(Component)]
    struct W<T>(T);
=======
    use crate::{component::Components, entity::Entity, storage::Table};
>>>>>>> 65e834ce8d5142f1a01d06c2a9e4e7ef4a1238a9

    #[test]
    fn table() {
        let mut components = Components::default();
<<<<<<< HEAD

```