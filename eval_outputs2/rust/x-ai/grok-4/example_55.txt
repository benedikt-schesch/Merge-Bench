<think>
No reasoning found</think>
```rust
                    .map(map_instance_event_with_id),
            ),
    }
}

<<<<<<< HEAD
impl<'w, 's, T: Resource> EventReader<'w, 's, T> {
=======
impl<'w, 's, T: Component> EventReader<'w, 's, T> {
>>>>>>> 65e834ce8d5142f1a01d06c2a9e4e7ef4a1238a9
    /// Iterates over the events this EventReader has not seen yet. This updates the EventReader's
    /// event counter, which means subsequent event reads will not include events that happened
    /// before now.
    pub fn iter(&mut self) -> impl DoubleEndedIterator<Item = &T> {
        self.iter_with_id().map(|(event, _id)| event)

```