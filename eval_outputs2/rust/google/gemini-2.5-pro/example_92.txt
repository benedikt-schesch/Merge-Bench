<think>
No reasoning found</think>
```rust
            })
        }
    }

    #[inline]
    pub fn get_or_insert_non_send_resource_id<T: Any>(&mut self) -> ComponentId {
        // SAFE: The [`ComponentDescriptor`] matches the [`TypeId`]
        unsafe {
            self.get_or_insert_resource_with(TypeId::of::<T>(), || {
                ComponentDescriptor::new_non_send::<T>(StorageType::default())
            })
```