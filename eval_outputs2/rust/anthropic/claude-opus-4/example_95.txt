<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to call `render_disk` but with different parameters:

- HEAD version: `render_disk(app, v_section, &mut f, view, &selected)`
- Incoming version: `render_disk(&app, v_section, &mut f, view, &selected, file_system_index, file_system_display)`

The semantic intent appears to be:
1. HEAD keeps the original function signature
2. The incoming change adds two new parameters (`file_system_index` and `file_system_display`) and also changes `app` to `&app`

Since the incoming version seems to be extending the functionality by adding file system related parameters, and this appears to be an intentional enhancement rather than a conflict in logic, I'll resolve by accepting the incoming version with the extended parameters:

```rust
                                Section::Cpu => render_cpu(app, v_section, &mut f, view, &selected),
                                Section::Network => {
                                    render_net(app, v_section, &mut f, view, &selected)
                                }
                                Section::Disk => {
                                    render_disk(&app, v_section, &mut f, view,
                                                &selected, file_system_index,
                                                file_system_display)
                                }
                                Section::Graphics => render_graphics(
                                    app,
                                    v_section,
                                    &mut f,

```