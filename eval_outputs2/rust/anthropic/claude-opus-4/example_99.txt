<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to add logging functionality to the `Tunn` struct, but with different approaches:

- **HEAD**: Uses a Rust-idiomatic approach with a boxed closure wrapped in a mutex
- **7dc62bb**: Uses a C-style function pointer for FFI compatibility

Without more context about the project's requirements (whether it needs FFI support or is pure Rust), I cannot determine which approach is correct or if both are needed. The semantic intent is ambiguous.

Here's the snippet with the conflict preserved:

```rust
    sessions: [Arc<spin::RwLock<Option<session::Session>>>; N_SESSIONS], // The N_SESSIONS most recent sessions, index is session id modulo N_SESSIONS
    current: AtomicUsize, // Index of most recently used session
    packet_queue: spin::Mutex<VecDeque<Vec<u8>>>, // Queue to store blocked packets
    timers: timers::Timers, // Keeps tabs on the expiring timers

<<<<<<< HEAD
    logger: Option<spin::Mutex<Box<Fn(&str) + Send>>>,
=======
    log: Option<unsafe extern "C" fn(*const c_char)>, // Pointer to an external log function
>>>>>>> 7dc62bb885c6cdb04e61025d2104e31456eaae37
    verbosity: Verbosity,
}

impl Tunn {
    /// Create a new tunnel using own private key and the peer public key
```