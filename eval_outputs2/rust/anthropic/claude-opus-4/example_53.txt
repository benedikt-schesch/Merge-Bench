<think>
No reasoning found</think>
Looking at this merge conflict, I need to understand the semantic intent of both sides:

- HEAD wants `T: Resource`
- The incoming change wants `T: Component`

Given the context:
1. `EventWriter` is accessing `events: ResMut<'w, Events<T>>`
2. `ResMut` is typically used for resources in ECS systems
3. The struct is dealing with `Events<T>` which is being accessed as a resource

The semantic intent appears to be that `Events<T>` is stored as a resource in the ECS system, so the type constraint should be `Resource` rather than `Component`. The HEAD version aligns with this usage pattern.

```rust
    events: Res<'w, Events<T>>,
}

/// Sends events of type `T`.
#[derive(SystemParam)]
pub struct EventWriter<'w, 's, T: Resource> {
    events: ResMut<'w, Events<T>>,
    #[system_param(ignore)]
    marker: PhantomData<&'s usize>,
}


```