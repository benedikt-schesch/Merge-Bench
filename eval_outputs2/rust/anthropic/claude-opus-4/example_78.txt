<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to register the same systems (`setup_system` and `diagnostic_system`) but with different syntax:

- HEAD version: Uses direct method references without `.system()` calls
- Other version: Uses `.system()` calls on the method references

This appears to be a common pattern in Bevy engine where the API changed between versions. The newer Bevy versions (0.6+) removed the need for `.system()` calls when adding systems, while older versions required them.

Since the HEAD version represents the more modern/cleaner API (without `.system()`), and both sides have the same intent (registering the same systems), I'll resolve this by keeping the HEAD version:

```rust
#[derive(Default)]
pub struct WgpuResourceDiagnosticsPlugin;

impl Plugin for WgpuResourceDiagnosticsPlugin {
    fn build(&self, app: &mut App) {
        app.add_startup_system(Self::setup_system)
            .add_system(Self::diagnostic_system);
    }
}

impl WgpuResourceDiagnosticsPlugin {
    pub const BIND_GROUPS: DiagnosticId =
```