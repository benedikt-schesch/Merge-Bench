<think>
No reasoning found</think>
Looking at this merge conflict, both sides are implementing the same trait for the same type, with the only difference being the order of lifetime parameters `'w` and `'s` in the `Commands` type.

Since both implementations have the same semantic intent - implementing `SpawnSceneCommands` for `Commands` - and the lifetime parameter order doesn't affect the functionality, I should choose one consistent order. The HEAD version uses `'w, 's` which is a common convention in many Rust codebases where `'w` often represents "world" and `'s` represents "state" or "system".

```rust

pub trait SpawnSceneCommands {
    fn spawn_scene(&mut self, scene: Handle<Scene>);
}

impl<'w, 's> SpawnSceneCommands for Commands<'w, 's> {
    fn spawn_scene(&mut self, scene_handle: Handle<Scene>) {
        self.add(SpawnScene { scene_handle });
    }
}


```