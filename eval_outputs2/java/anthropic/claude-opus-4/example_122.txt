<think>
No reasoning found</think>
Looking at this merge conflict, I need to understand the semantic intent of both sides:

- **HEAD (current branch)**: Wants `ContentEditorActivity` to extend `BackActivity`
- **Incoming change**: Wants `ContentEditorActivity` to extend `RepositoryThemeActivity`

Without more context about the class hierarchy and the relationship between `BackActivity` and `RepositoryThemeActivity`, I cannot determine which parent class is semantically correct or if one extends the other. The conflict represents a fundamental architectural decision about the inheritance hierarchy.

Since the intent is ambiguous and I cannot determine which parent class should be used without understanding the broader codebase architecture, I'm returning the snippet with the conflict preserved:

```java
import rx.Subscriber;
import rx.android.schedulers.AndroidSchedulers;
import rx.functions.Func1;
import rx.schedulers.Schedulers;

<<<<<<< HEAD
public class ContentEditorActivity extends BackActivity
=======
public class ContentEditorActivity extends RepositoryThemeActivity
>>>>>>> f8f91f1d455f6842ca57b8294f6a263ff0cde1e4
    implements Toolbar.OnMenuItemClickListener, QueryTokenReceiver, ContentEditorPresenter.Callback {

  public static final String CONTENT = "CONTENT";
  private static final String HINT = "HINT";
  private static final String PREFILL = "PREFILL";

```