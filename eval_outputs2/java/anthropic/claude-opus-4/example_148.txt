<think>
No reasoning found</think>
Looking at this merge conflict, I need to understand the intent of both sides:

- **HEAD (current branch)**: Has a comment explaining that ScriptState may have been initialized in Main and should not be overwritten
- **Incoming branch**: Removed the comment but kept the same logic

Both sides maintain the same actual code logic - checking if `ScriptState.get() == null` before initializing. The only difference is the presence/absence of the comment.

Since the comment provides valuable context about why the null check is important (to avoid overwriting ScriptState if it was already initialized in Main), and both sides agree on the actual implementation, I'll resolve this by keeping the comment from HEAD while maintaining the code structure.

```java

        addJarsFromProperties();
        markPredeployedJarsFromProperties();

        PigStats.start(pigContext.getExecutionEngine().instantiatePigStats());
        // ScriptState may have been initialized in Main. In that case, we
        // should not overwrite it.
        if (ScriptState.get() == null) {
            // If Pig was started via command line, ScriptState should have been
            // already initialized in Main. If so, we should not overwrite it.
            ScriptState.start(pigContext.getExecutionEngine().instantiateScriptState());
        }

```