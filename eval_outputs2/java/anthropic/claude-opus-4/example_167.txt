<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to import the `ExecType` class, but from different locations:

- HEAD: `org.apache.pig.PigServer.ExecType`
- The other branch: `org.apache.pig.ExecType`

This appears to be a refactoring where `ExecType` was moved from being a nested class inside `PigServer` to a top-level class in the `org.apache.pig` package. The semantic intent of both sides is the same - to import the `ExecType` class for use in the code.

Based on common refactoring patterns, moving from a nested class to a top-level class is typically the "forward" direction of refactoring (improving code organization), so the newer location `org.apache.pig.ExecType` should be preferred.

Here's the resolved code:

```java
import java.util.Properties ;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.hadoop.mapred.JobConf;
import org.apache.pig.ExecType;
import org.apache.pig.backend.datastorage.ContainerDescriptor;
import org.apache.pig.backend.datastorage.DataStorage;
import org.apache.pig.backend.datastorage.DataStorageException;
import org.apache.pig.backend.datastorage.ElementDescriptor;
import org.apache.pig.backend.hadoop.datastorage.HDataStorage;

```