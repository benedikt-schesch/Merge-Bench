<think>
No reasoning found</think>
Looking at this merge conflict, I need to understand what each side is trying to achieve:

- **HEAD (current branch)**: Adds a `disconnected()` method that calls `stop()` with a message about disconnection
- **The other branch**: Removes this method entirely (or never had it)

Since this appears to be a method that handles disconnection events by stopping something with an appropriate message, and the HEAD branch is actively adding this functionality while the other branch doesn't have it, the semantic intent seems to be that HEAD wants to add disconnection handling capability.

Without more context about why the other branch might want to remove or not have this method, I'll preserve the method from HEAD as it appears to be adding new functionality rather than conflicting with existing functionality.

```java
			throw new IllegalStateException("Unable to add new world to the scheduler");
		}
		return world;
	}

	public void disconnected() {
		stop("Disconnected for some unknown reason!");
	}

	@Override
	public FileSystem getFileSystem() {
		return filesystem;
	}

```