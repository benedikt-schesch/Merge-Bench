<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to import `ExecType`, but from different locations:

- HEAD (current branch): `import org.apache.pig.PigServer.ExecType;`
- Incoming change: `import org.apache.pig.ExecType;`

Based on the Apache Pig library structure and common usage patterns, `ExecType` is typically located directly under `org.apache.pig` package in more recent versions of Pig, while older versions had it as an inner class of `PigServer`. 

Since both imports are trying to achieve the same goal (importing the `ExecType` class), and the incoming change appears to be using the more modern/standard location, I'll resolve this by using the incoming change's import.

```java
import org.apache.log4j.Logger;
import org.apache.log4j.Level;
import org.apache.log4j.ConsoleAppender;
import org.apache.log4j.PatternLayout;
import org.apache.log4j.PropertyConfigurator;
import org.apache.pig.ExecType;
import org.apache.pig.backend.hadoop.executionengine.HExecutionEngine;
import org.apache.pig.impl.PigContext;
import org.apache.pig.impl.io.FileLocalizer;
import org.apache.pig.impl.logicalLayer.LogicalPlanBuilder;
import org.apache.pig.impl.util.JarManager;

```