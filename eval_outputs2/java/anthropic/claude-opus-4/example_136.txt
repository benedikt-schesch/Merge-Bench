<think>
No reasoning found</think>
Looking at this merge conflict, I can see that both sides are trying to modify the same method, but with different intentions:

- HEAD: Adds a print statement to indicate checking the physical plan
- The other branch: Adds both an optimization step and the same print statement

The semantic intent appears to be:
1. Both sides want to add debugging output (the print statement)
2. The other branch also wants to optimize the logical plan before compiling it

Since both changes seem intentional and complementary (optimization before checking seems logical), the resolution should include both the optimization and the print statement.

```java
    }

    private PhysicalPlan checkPhysicalPlan(LogicalPlan lp, int expectedRoots,
            int expectedLeaves, int expectedSize) throws IOException {

        lp.optimize(myPig.getPigContext());
        System.out.println("===== check physical plan =====");

        PhysicalPlan pp = ((MRExecutionEngine)myPig.getPigContext().getExecutionEngine()).compile(
                lp, null);

        Assert.assertEquals(expectedRoots, pp.getRoots().size());

```