<think>
No reasoning found</think>
Looking at this merge conflict, I need to understand what each side is trying to achieve:

**HEAD (current branch)**: When catching an AttributeError and the URL starts with 'http://e.weibo.com', it simply returns (presumably `None` or void). Otherwise, it re-raises the exception.

**Incoming branch**: When catching an AttributeError and the URL starts with 'http://e.weibo.com', it returns two empty lists `[], []`. Otherwise, it calls `self._error(url, e)` to handle the error.

The semantic intent appears to be:
- Both sides agree that URLs starting with 'http://e.weibo.com' should be handled specially (not treated as an error)
- They differ in what to return: HEAD returns nothing, while incoming returns two empty lists
- They differ in error handling: HEAD re-raises, while incoming uses an error handler method

Since the incoming branch seems to have a more structured approach (returning consistent types and using a dedicated error handler), and considering this appears to be part of a parser that likely needs to return consistent data structures, I'll resolve in favor of the incoming changes:

```python
            ul = html.find(attrs={'class': 'cnfList', 'node-type': 'userListBox'})
            if ul is None:
                ul = html.find(attrs={'class': 'follow_list', 'node-type': 'userListBox'})
        except AttributeError, e:
            if br.geturl().startswith('http://e.weibo.com'):
                return [], []
            return self._error(url, e)
        
        if ul is None:
            if is_follow is True:
                if is_new_mode:
                    yield 'http://weibo.com/%s/follow?relate=fans' % self.uid
```