<think>
No reasoning found</think>
I'll resolve the merge conflict while preserving the original semantics and context. The conflicting versions represent a formatting change where one uses a multi-line function signature for readibility and PEP-8 compliance.

```python

            return data

        return validate_set

    def extend(
        self,
        schema: Schemable,
        required: typing.Optional[bool] = None,
        extra: typing.Optional[int] = None,
    ) -> Schema:
        """Create a new `Schema` by merging this and the provided `schema`.

        Neither this `Schema` nor the provided `schema` are modified. The
        resulting `Schema` inherits the `required` and `extra` parameters of
        this, unless overridden.
```

The resolution chooses the multi-line format because:
1. The functional intent is identical in both versions
2. The multi-line version improves readability
3. PEP-8 recommends breaking long function signatures
4. Both versions have identical parameters and types
5. No semantic difference exists between the two implementations

The surrounding context remains unchanged per requirements.