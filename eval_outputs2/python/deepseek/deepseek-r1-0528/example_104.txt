<think>
No reasoning found</think>
The merge conflict involves differing approaches to handling an `AttributeError` within the extractor logic. The key points are:

1. On encountering an `AttributeError` when `br.geturl()` starts with `'http://e.weibo.com'`, the conflicting branches propose different approaches:
   - HEAD branch (`app/weibo/parsers.py`): Exits the generator function with `return`
   - Other branch (`contrib/weibo/parsers.py`): Returns two empty lists `[], []`

2. For other URLs in the error case:
   - HEAD propagates the original exception with `raise e`
   - Other branch calls error handling method `self._error(url, e)`

The critical ambiguity lies in:
- The presence of `yield` indicates this is a generator function
- Python 2 doesn't allow returning values from generators (could cause syntax errors for `return [], []`)
- The return type expectations of callers are unclear
- The semantics of `self._error()` are undefined in this context

Since the resolution depends on non-local factors (program structure, generator semantics, error handling strategy) that aren't available in the given context, I'm returning the original code block with conflict markers intact.

```python
            ul = html.find(attrs={'class': 'cnfList', 'node-type': 'userListBox'})
            if ul is None:
                ul = html.find(attrs={'class': 'follow_list', 'node-type': 'userListBox'})
        except AttributeError, e:
            if br.geturl().startswith('http://e.weibo.com'):
<<<<<<< HEAD:app/weibo/parsers.py
                return
            raise e
=======
                return [], []
            return self._error(url, e)
>>>>>>> d26437720088c6a178dce1b795cf5b06a5ed2524:contrib/weibo/parsers.py
        
        if ul is None:
            if is_follow is True:
                if is_new_mode:
                    yield 'http://weibo.com/%s/follow?relate=fans' % self.uid
```