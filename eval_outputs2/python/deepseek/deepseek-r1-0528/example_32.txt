<think>
No reasoning found</think>
```python

    with pytest.raises(
        MultipleInvalid, match=r"\{'c': 1\} not match for \{'b': 1\} @ data\[0\]"
    ) as ctx:
        schema([{"c": 1}])
    assert len(ctx.value.errors) == 1
    assert isinstance(ctx.value.errors[0], LiteralInvalid)

    schema = Schema(Literal({"a": 1}))
    with pytest.raises(
        MultipleInvalid, match=r"\{'b': 1\} not match for \{'a': 1\}"
    ) as ctx:
```

Reasoning for resolution:
- The `pytest.raises` context manager already validates the exception is raised, making the HEAD's `expect/else` structure unnecessary and syntactically incorrect (the context manager would have already handled the exception)
- The other branch's approach is standard practice with `pytest` as it validates error details after exception capture
- Failed validation's message was already checked via regex in `pytest.raises()`
- Added validations for error count and type provide additional safeguard