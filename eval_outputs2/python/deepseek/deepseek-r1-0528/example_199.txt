<think>
No reasoning found</think>
```python

class DefaultChooser(object):
    def __init__(self, options):
        self.grid_size = options.get('grid_size', DEFAULT_GRIDSIZE)
        self.grid_seed = options.get('grid_seed', DEFAULT_GRIDSEED)
<<<<<<< HEAD
        self.num_spray = options.get('num-spray', DEFAULT_NUMSPRAY)
=======
        self.num_spray = options.get('num-spray', DEFAULT_NUMSPARY)
>>>>>>> a4569b75e8d7238eb1060f84c4645b3a00ab04d6
        self.spray_std = options.get('spray-std', DEFAULT_SPRAYSTD)
        self.check_grad = options.get('check-grad', False)

        self.grid_subset = 20


```

**Resolution Decision:**  
The conflict remains unresolved due to ambiguity in constant naming. The key difference is the default value constant:
- HEAD uses `DEFAULT_NUMSPRAY`
- Branch uses `DEFAULT_NUMSPARY`

Without additional context to determine:
1. Which constant is properly defined elsewhere in the codebase
2. Whether this is a typo (`NUMSPRAY` vs `NUMSPARY`)
3. Which version implements the intended default value

The conflict is preserved for manual resolution. A developer should:
- Verify which constant exists in the codebase
- Confirm the correct spelling and value
- Choose the appropriate constant based on project standards