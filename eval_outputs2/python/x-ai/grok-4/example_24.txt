<think>
No reasoning found</think>
```python
    ...  validate(['three'])
    ... except er.MultipleInvalid as e:
    ...   assert isinstance(e.errors[0], er.RangeInvalid)
    """

    def __init__(
        self,
        schema: Schemable,
        msg: str,
        cls: typing.Optional[typing.Type[Error]] = None,
    ) -> None:
        if cls and not issubclass(cls, er.Invalid):
            raise er.SchemaError(
                "Msg can only use subclases of Invalid as custom class"
            )
        self._schema = schema

```