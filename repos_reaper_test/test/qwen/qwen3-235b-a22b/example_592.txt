<think>
No reasoning found</think>
Here is the resolution with preserved context and semantic merging:

```java
   * Handles mapping Facebook response JSON to Java objects.
   */
  protected JsonMapper jsonMapper;

  /**
   * Knows how to map Old REST API exceptions to formal Java exception types.
   */
  protected FacebookExceptionMapper legacyFacebookExceptionMapper;

  /**
   * Set of parameter names that user must not specify themselves, since we use these parameters internally.
   */
  protected final Set<String> illegalParamNames = new HashSet<String>();

  /**
```

The merge conflict involved two distinct field declarations with associated documentation:
1. `JsonMapper` for handling Facebook JSON responses (from one branch)
2. `FacebookExceptionMapper` for REST API exceptions (from the other branch)

Semantically, these serve different but complementary purposes in API interaction handling and can safely coexist without functional overlap or conflict in responsibilities. The resolution preserves both components as they are clearly additive to each other.