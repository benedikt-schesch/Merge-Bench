<think>
No reasoning found</think>
The merge conflict in the provided code snippet revolves around the presence or absence of the `@Beta` annotation preceding the `createMtlsKeyStore` method. Specifically:

- In `HEAD`, the line contains `@Beta`.
- In the incoming commit (`51762f221ec8ab38da03149c8012e63aec0433dc`), that line is empty or seemingly removed.

---

Without additional context regarding the purpose of the `@Beta` annotation or the development lifecycle of the method (e.g., whether it is experimental, in a testing phase, or has since stabilized), it's not possible to resolve the conflict semantically with certainty.

The presence or absence of the annotation likely carries semantic implications related to the method's stability or usage intent across different branches. One branch indicates the method might be experimental, and the other omits this indicationâ€”either because it was never introduced in that branch or because it was intentionally removed.

---

Given this ambiguity, the most appropriate resolution, per the instructions, is to return the original code snippet **unresolved**, preserving the context and spacing as instructed.

---

```java
   * @param certAndKey Certificate and private key input stream. The stream should contain one
   *     certificate and one unencrypted private key. If there are multiple certificates, only the
   *     first certificate will be used.
   * @return keystore for mutual TLS.
   */
<<<<<<< HEAD
  @Beta
=======
>>>>>>> 51762f221ec8ab38da03149c8012e63aec0433dc
  public static KeyStore createMtlsKeyStore(InputStream certAndKey)
      throws GeneralSecurityException, IOException {
    KeyStore keystore = KeyStore.getInstance("JKS");
    keystore.load(null);
```