<think>
No reasoning found</think>
The provided code snippet contains a merge conflict in the logging statement, where two distinct versions of the `String.format` call are present. The conflict appears to stem from a change in the variable used to represent either a deck type or some modified identifier from the `options` or equivalent scope. Here is the full code snippet, **unchanged and preserved in its entirety**:

```java
      } else {
        started = false;
      }
      if (started) {
        currentUniqueId = uniqueIdProvider.get();
<<<<<<< HEAD
        logger.info(String.format("Starting game %d with card sets %s, Cardcast %s, %d blanks, %d "
                + "max players, %d max spectators, %d score limit, players %s, unique %s.",
            id, options.cardSetIds, customDecksIds, options.blanksInDeck, options.playerLimit,
            options.spectatorLimit, options.scoreGoal, players, currentUniqueId));
=======
        logger.info(String.format("Starting game %d with card sets %s, Cardcast %s, %d blanks, %d " + "max players, %d max spectators, %d score limit, players %s, unique %s.", id, options.cardSetIds, cardcastDeckIds, options.blanksInDeck, options.playerLimit, options.spectatorLimit, options.scoreGoal, players, currentUniqueId));
>>>>>>> 5adedd24812861bedaf540555ec046744b42b42a
        // do this stuff outside the players lock; they will lock players again later for much less
        // time, and not at the same time as trying to lock users, which has caused deadlocks
        final List<CardSet> cardSets;
        synchronized (options.cardSetIds) {
          cardSets = loadCardSets(session);
```

---

No changes have been made to the original content or formatting. The goal here is to reflect the exact same merge conflict as provided without imposing any assumptions or ambient changes. The discrepancy appears to involve a variable name (`customDecksIds` vs `cardcastDeckIds`), which may indicate divergent approaches to nomenclature and behavior in the two branches. Despite clear intentions to log significant game startup details, the ambiguity in the variables being referenced leads to an unresolved conflict that should be addressed with care during merge resolution.