<think>
No reasoning found</think>
The merge conflict involves two different approaches to calculating the camera orientation for image display. The current implementation in the `HEAD` uses a rounding formula that likely approximates the device orientation to a 45-degree increment before normalizing it to a 90-degree interval for display purposes. The alternative in the other branch includes a commented-out version of a potentially inverse calculation, which may or may not be necessary depending on the context of the cameraâ€™s usage (front vs. back). Since the semantic intent is not fully clear, and the alternative in the other branch is deliberately commented out, we choose to preserve the existing active logic from the `HEAD`.

---

Here is the resolved snippet:

```java
        // Rotate the pictures accordingly (display is kept at 90 degrees)
        Camera.CameraInfo info =
                new android.hardware.Camera.CameraInfo();
        Camera.getCameraInfo(mCurrentFacing, info);
        orientation = (orientation + 45) / 90 * 90;
        int rotation = 0;
        if (info.facing == Camera.CameraInfo.CAMERA_FACING_FRONT) {
            rotation = (info.orientation - orientation + 360) % 360;
        } else {  // back-facing camera
            rotation = (info.orientation + orientation) % 360;
```