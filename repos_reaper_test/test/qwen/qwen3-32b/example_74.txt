<think>
No reasoning found</think>
The merge conflict involves two different dependency injection providers for services that are likely distinct in functionality. Since both providers (`CustomCardsService` and `CardcastService`) appear in unrelated code branches and the context does not clarify their relationship or replacement logic, assuming they are semantically additive and should coexist.

Here is the resolved snippet with both providers preserved:

```java
  /**
   * Lock to prevent missing timer updates.
   */
  private final Object roundTimerLock = new Object();
  private final ScheduledThreadPoolExecutor globalTimer;
  private final Provider<CustomCardsService> customDecksServiceProvider;
  private final Provider<CardcastService> cardcastServiceProvider;
  private final Provider<String> uniqueIdProvider;
  private Player host;
  private BlackDeck blackDeck;
  private BlackCard blackCard;
  private WhiteDeck whiteDeck;
```