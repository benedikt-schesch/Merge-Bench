<think>
No reasoning found</think>
Looking at the merge conflict, I need to determine which approach to take. One side is calling `setPrincipal()` with `manager` as a parameter to the `deserializePrincipal` method, while the other is calling `setPrincipalInternal()` with `realm` as a parameter.

Since this appears to be a method name change alongside a parameter change, and without additional context to understand the full intent, I'll preserve the merge conflict as requested:

```java
        final int currentIdx = 44 + idLength + 2;
        final short principalDataLength = (short) decodeNum( data, currentIdx, 2 );
        if ( principalDataLength > 0 ) {
            final byte[] principalData = new byte[principalDataLength];
            System.arraycopy( data, currentIdx + 2, principalData, 0, principalDataLength );
<<<<<<< HEAD
            result.setPrincipal( deserializePrincipal( principalData, manager ) );
=======
            result.setPrincipalInternal( deserializePrincipal( principalData, realm ) );
>>>>>>> 6c5fb5474dc66d5ab104a5546f43f05b75a4aaa2
        }

        final byte[] attributesData = new byte[ data.length - sessionFieldsDataLength ];
        System.arraycopy( data, sessionFieldsDataLength, attributesData, 0, data.length - sessionFieldsDataLength );

```