<think>
No reasoning found</think>
Looking at this merge conflict, I see that the only difference is in the type declaration for the `HashMap`:
- One side uses the Java 6/7 style with explicit type parameters: `new HashMap<GameInfo, Object>()`
- The other side uses Java 7+ diamond operator syntax: `new HashMap<>()`

The diamond operator (`<>`) was introduced in Java 7 to reduce verbosity while maintaining type safety, and is generally preferred in modern Java code.

Here's the resolved code snippet:

```java
   *                        sent to people in the game.
   * @return This game's general information: ID, host, state, player list, etc.
   */
  @Nullable
  public Map<GameInfo, Object> getInfo(final boolean includePassword) {
    final Map<GameInfo, Object> info = new HashMap<>();
    info.put(GameInfo.ID, id);
    // This is probably happening because the game ceases to exist in the middle of getting the
    // game list. Just return nothing.
    if (null == host) {
      return null;
```