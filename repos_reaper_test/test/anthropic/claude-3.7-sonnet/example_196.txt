<think>
No reasoning found</think>
Looking at this merge conflict, I need to reconcile two different approaches to getting the class name from a function specification. Let me analyze the semantics of both sides:

1. The HEAD version calls `getClassNameFromSpec(funcSpec)` or `getClassNameFromSpec(alias)` directly.
2. The incoming version (1488b22) uses `funcSpec.getClassName()` and `FuncSpec.getClassNameFromSpec(alias)` instead.

The incoming change seems to be refactoring the code to use a method on the FuncSpec class directly rather than an external helper method. This is a more object-oriented approach.

Here's the resolved snippet:

```java
>>>>>>> 1488b22ce313803d012c8ace36c3b12f930ee309
        if (definedFunctions != null) {
            funcSpec = definedFunctions.get(alias);
        }
        if (funcSpec != null) {
            className = funcSpec.getClassName();
        }else{
            className = FuncSpec.getClassNameFromSpec(alias);
        }
        return resolveClassName(className);
    }
  
    public Object instantiateFuncFromAlias(String alias) throws IOException {

```