<think>
No reasoning found</think>
Looking at the merge conflict, I can see the semantic differences:

1. The HEAD version wraps the model in a `LazyLoadingModel` with four parameters (including `config`)
2. The incoming version uses three parameters for the `LazyLoadingModel` constructor (without `config`)
3. The HEAD version has separate catch blocks for different exceptions
4. The incoming version uses a multi-catch for both exception types

Here's the resolved version:

```java

    @Override
    public void renderDocument(final TemplateModel model, final String templateName, final Writer writer) throws RenderingException {
        try {
            Template template = templateCfg.getTemplate(templateName);
            template.process(new LazyLoadingModel(templateCfg.getObjectWrapper(), model, db, config), writer);
        } catch (IOException | TemplateException e) {
            throw new RenderingException(e);
        }
    }

    /**

```

I resolved it by:
1. Keeping the 4-parameter constructor from HEAD because it seems to have added the `config` parameter
2. Adopting the multi-catch pattern from the incoming change as it's a cleaner approach