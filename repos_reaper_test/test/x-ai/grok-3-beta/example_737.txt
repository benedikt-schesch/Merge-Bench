<think>
No reasoning found</think>
Here is the provided code snippet with the merge conflict, preserved exactly as it was given, including spacing and context. I have not modified any part of the code or surrounding text. Following the snippet, I will provide an analysis of the conflict and my resolution recommendation.

```java
     * Normally closes the review drawer (animation)
     */
    public void close() {
        mIsOpen = false;
        animate().setDuration(DRAWER_TOGGLE_DURATION).setInterpolator(new DecelerateInterpolator())
<<<<<<< HEAD
                .translationY(-getMeasuredHeight()).alpha(0.0f).setListener(new Animator.AnimatorListener() {
            @Override
            public void onAnimationStart(Animator animator) {
=======
                .translationY(-getMeasuredHeight()).alpha(0.0f)
                .setListener(new Animator.AnimatorListener() {
                    @Override
                    public void onAnimationStart(Animator animator) {
>>>>>>> c923751783db11df8cb8dc1909ab59605492344c

                    }

                    @Override
                    public void onAnimationEnd(Animator animator) {

```

### Analysis and Resolution Recommendation
Looking at the merge conflict semantically, the difference between the two sides is minimal and appears to be related to code formatting or an incomplete change on one branch. Let's break it down:

- **HEAD Branch**: The code has `.translationY(-getMeasuredHeight()).alpha(0.0f).setListener(...)` with a specific indentation and line break before `setListener`. Additionally, the `onAnimationStart` method is indented differently and lacks the spacing seen in the other branch.
- **Incoming Branch (c923751783db11df8cb8dc1909ab59605492344c)**: The code has `.translationY(-getMeasuredHeight()).alpha(0.0f)` on one line, followed by `setListener(...)` on the next line with slightly different indentation and spacing for the `onAnimationStart` method.

**Intent and Semantics**:
- Both branches are implementing the same functionality: animating a drawer to close by translating it off-screen and reducing its alpha to 0.0f, while attaching an `AnimatorListener` to handle animation events.
- The difference is purely stylistic (line breaks and indentation) and does not affect the logic or behavior of the code. There is no functional conflict in the intent of the code.

**Resolution**:
Since the difference is stylistic, I recommend adopting one of the formats for consistency. Given that the incoming branch (`c923751783db11df8cb8dc1909ab59605492344c`) separates `setListener` onto a new line, which may improve readability, I suggest resolving the conflict by adopting that style. Additionally, preserving the indentation and spacing as seen in the incoming branch for the `onAnimationStart` method aligns with a cleaner look.

**Resolved Code**:
```java
     * Normally closes the review drawer (animation)
     */
    public void close() {
        mIsOpen = false;
        animate().setDuration(DRAWER_TOGGLE_DURATION).setInterpolator(new DecelerateInterpolator())
                .translationY(-getMeasuredHeight()).alpha(0.0f)
                .setListener(new Animator.AnimatorListener() {
                    @Override
                    public void onAnimationStart(Animator animator) {

                    }

                    @Override
                    public void onAnimationEnd(Animator animator) {

```

This resolution maintains the semantic intent of both branches (which is identical) and opts for a readable formatting style. If there are project-specific style guidelines, those should take precedence, but since none are provided, I have chosen the incoming branch's style for clarity.

If you disagree with this resolution or prefer to maintain the HEAD branch's style, or if there are broader context or style guidelines to consider, I can adjust accordingly. Please let me know!