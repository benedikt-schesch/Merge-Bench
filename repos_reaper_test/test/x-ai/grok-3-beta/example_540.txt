<think>
No reasoning found</think>
I'll analyze the merge conflict and provide the snippet with the conflict unresolved as the intent and best resolution are not entirely clear without additional context. Below is the original snippet preserved exactly as provided, including spacing and formatting.

```java

            if (initPeripheralCallback != null) initPeripheralCallback.sendPluginResult(pluginResult);

            break;
          case BluetoothAdapter.STATE_TURNING_OFF:
<<<<<<< HEAD
            // Reset isAdvertising when adapter is turning off
            if (isAdvertising) isAdvertising = false;

            // Make sure gattServer is not null (in case this triggers when it is null)
            if (gattServer != null) gattServer.close();
=======
            if(gattServer != null) gattServer.close();
>>>>>>> 094cb482d0c11e5f16a8f386fd5596e34e562015
            break;
          case BluetoothAdapter.STATE_ON:

            addProperty(returnObj, keyStatus, statusEnabled);


```

**Analysis of Intent and Semantics:**

- **HEAD Side**: The intent appears to be ensuring proper cleanup when the Bluetooth adapter is turning off. It includes resetting the `isAdvertising` flag to `false` if it was `true`, and it checks if `gattServer` is not null before closing it (with a comment explaining the null check).
- **Other Side (094cb482d0c11e5f16a8f386fd5596e34e562015)**: The intent seems to be a simpler cleanup, only closing the `gattServer` if it is not null, without addressing the `isAdvertising` flag.

**Reason for Keeping Conflict Unresolved:**

The intent of the HEAD side includes additional logic for handling the `isAdvertising` state, which might be critical to the application's behavior (e.g., ensuring consistent state tracking when Bluetooth is turning off). The other side omits this logic, which could indicate either a deliberate simplification or an unintentional oversight. Without broader context about the importance of `isAdvertising` or the overall design goals of the codebase, resolving the conflict by favoring one side could introduce bugs or deviate from the intended functionality.

If the `isAdvertising` flag is important for state management, the HEAD side's logic should be retained. If the simplification on the other side is intentional (perhaps due to refactoring or removal of unused state), then the other side might be correct. Given this ambiguity, I have preserved the conflict as is for manual resolution by someone with more context about the codebase.