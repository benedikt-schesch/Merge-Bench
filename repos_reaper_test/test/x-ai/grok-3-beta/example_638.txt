<think>
No reasoning found</think>
I'll analyze the merge conflict and provide the snippet as requested.

The conflict is between two versions of the `contentType` field declaration:
- `HEAD` version: `private String contentType;`
- `a17acec` version: `private String contentType = null;`

Semantically, both versions are trying to achieve the same thing: declaring a `contentType` field of type `String`. The difference is that the `a17acec` version explicitly initializes it to `null`, which in Java is the default value for object references anyway. Therefore, the explicit initialization is redundant and doesn't change the behavior of the code.

Since the intent is identical (to have a `contentType` field that starts as null), I'll preserve the simpler version from `HEAD` without the redundant initialization.

Here is the snippet with the resolved conflict:

```java

  private byte[] data;

  private InputStream dataStream;

  private String contentType;

  @Getter
  private String fieldName;

  /**

```