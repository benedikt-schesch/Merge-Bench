<think>
No reasoning found</think>
I'll analyze the merge conflict and resolve it based on the semantic intent of both sides.

Both sides of the merge conflict are defining a `TreeSet` for `finitePlaytimes` with the exact same list of playback speed options ("0.25x" to "10x"). The only differences are minor syntactical variations:
- The `HEAD` version uses `new String[]{"..."}` with explicit array creation.
- The other branch uses a more concise `Arrays.asList("...")` without the `new String[]` syntax and omits explicit generic type `<String>` in the `TreeSet` constructor, relying on type inference.

The intent on both sides is identical: to initialize a sorted, unmodifiable set of playback speed options. Therefore, I will resolve the conflict by choosing the more concise and modern syntax from the non-HEAD branch, as it achieves the same result with less verbosity.

Here is the resolved code snippet with the full context preserved exactly as provided:

```java
  private final static int JUDGE_TIMEOUT_PER_CARD = 7 * 1000;
  private final static int MAX_SKIPS_BEFORE_KICK = 2;
  private final static Set<String> FINITE_PLAYTIMES;

  static {
    final Set<String> finitePlaytimes = new TreeSet<>(Arrays.asList("0.25x", "0.5x", "0.75x", "1x", "1.25x", "1.5x", "1.75x", "2x", "2.5x", "3x", "4x", "5x", "10x"));
    FINITE_PLAYTIMES = Collections.unmodifiableSet(finitePlaytimes);
  }

  private final int id;
  /**
```