<think>
No reasoning found</think>
To resolve the given merge conflict, let's first understand the context and the changes introduced by both sides of the merge.

The code snippet appears to be part of a Java class, likely used for interacting with the Facebook API. It includes a field `jsonMapper` responsible for mapping Facebook response JSON to Java objects.

The merge conflict arises between the local changes (`HEAD`) and the incoming changes (`a17acec0655b8058aaf4d336ba2a1352aa49e2fe`). The conflict is centered around the declaration of a field related to handling Facebook exceptions.

The incoming change (`a17acec0655b8058aaf4d336ba2a1352aa49e2fe`) introduces a new field named `legacyFacebookExceptionMapper` with a comment explaining its purpose: to map Old REST API exceptions to formal Java exception types.

To resolve this conflict, we need to consider the intent behind both sets of changes. The local changes (`HEAD`) do not introduce any new fields or significant changes in this snippet, while the incoming changes add a field that seems relevant to handling exceptions from Facebook's Old REST API.

Given the information and the context, it appears that the incoming change is adding a necessary component for handling legacy Facebook API exceptions. The local changes do not seem to be modifying or removing any related functionality.

Therefore, the resolution involves accepting the incoming change and incorporating it into the code. The resolved snippet should include the newly introduced field.

Here is the resolved code snippet in markdown code syntax, preserving the original context and spacing:

```java
   * Handles mapping Facebook response JSON to Java objects.
   */
  protected JsonMapper jsonMapper;

  /**
   * Knows how to map Old REST API exceptions to formal Java exception types.
   */
  protected FacebookExceptionMapper legacyFacebookExceptionMapper;

  /**
   * Set of parameter names that user must not specify themselves, since we use these parameters internally.
   */
  protected final Set<String> illegalParamNames = new HashSet<String>();

  /**
```