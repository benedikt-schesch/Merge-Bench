<think>
No reasoning found</think>
To resolve this merge conflict, let's analyze the intent and semantics of both sides of the merge.

The conflict is between two different variable declarations:
- `private final Set<Integer> customDecksIds = Collections.synchronizedSet(new HashSet<Integer>());`
- `private final Set<String> cardcastDeckIds = Collections.synchronizedSet(new HashSet<>());`

The variable names and types suggest they are used for different purposes. `customDecksIds` implies a collection of IDs related to custom decks, likely used within the application for managing or tracking custom card decks. The type `Integer` suggests these IDs are integer values.

On the other hand, `cardcastDeckIds` suggests a collection of IDs related to decks from Cardcast, a service for creating and sharing card decks, particularly for games like Cards Against Humanity. The type `String` indicates these IDs are string values.

Given the distinct variable names and their types, it seems both variables serve different purposes within the application. `customDecksIds` is about managing custom decks with integer IDs, while `cardcastDeckIds` is about managing Cardcast deck IDs, which are strings.

The intent behind both changes appears to be adding different features or functionalities to the application. One is related to custom decks ( possibly an existing or older feature), and the other is related to integrating or managing Cardcast decks ( possibly a newer feature or a different integration).

Since both variables are distinct in their purpose and there's no direct overlap or conflict in their semantics, the most appropriate resolution is to include both variables in the merged code.

Here is the resolved code snippet in markdown code syntax, preserving the original context and spacing:

```java
  private final ConnectedUsers connectedUsers;
  private final GameManager gameManager;
  private final Provider<Session> sessionProvider;
  private final Object blackCardLock = new Object();
  private final GameOptions options;
  private final Set<Integer> customDecksIds = Collections.synchronizedSet(new HashSet<Integer>());
  private final Set<String> cardcastDeckIds = Collections.synchronizedSet(new HashSet<>());
  private final Metrics metrics;
  private final Provider<Boolean> showGameLinkProvider;
  private final Provider<String> gamePermalinkFormatProvider;
  private final Provider<Boolean> showRoundLinkProvider;
```