<think>
No reasoning found</think>
To resolve this merge conflict, I will analyze the context and the changes made on both sides of the merge.

The conflict is in the import statements of a Java file. The `HEAD` version (typically representing the local or current branch) has a certain set of imports, while the version from `f8f91f1d455f6842ca57b8294f6a263ff0cde1e4` (representing the other branch being merged into the current branch) has a different set.

Let's examine the changes:
- The `HEAD` version imports `com.alorma.github.ui.activity.base.BackActivity;`, which is not present in the other version.
- The other version (`f8f91f1d455f6842ca57b8294f6a263ff0cde1e4`) imports `com.alorma.github.ui.activity.base.RepositoryThemeActivity;` and `com.alorma.github.utils.AttributesUtils;`, which are not present in the `HEAD` version.

Both versions share some common imports, which remain unchanged.

To resolve this conflict, we need to determine the intent behind the changes on both sides. The changes seem to be related to the base activity class being used (`BackActivity` vs `RepositoryThemeActivity`) and an additional utility import (`AttributesUtils`) in the other version.

If `RepositoryThemeActivity` is intended to replace or be used alongside `BackActivity`, and if `AttributesUtils` is required for the functionality being merged, then we should include all relevant imports.

Here is the resolved snippet in markdown code syntax, preserving the original context and spacing:
```java
import com.alorma.github.sdk.bean.dto.response.User;
import com.alorma.github.sdk.bean.info.IssueInfo;
import com.alorma.github.sdk.bean.info.RepoInfo;
import com.alorma.github.sdk.services.repo.GetRepoContributorsClient;
import com.alorma.github.sdk.services.search.UsersSearchClient;
import com.alorma.github.ui.activity.base.BackActivity;
import com.alorma.github.ui.activity.base.RepositoryThemeActivity;
import com.alorma.github.ui.utils.IntentHelper;
import com.alorma.github.ui.utils.uris.UriUtils;
import com.alorma.github.utils.AttributesUtils;
import com.alorma.gitskarios.core.Pair;
import com.github.mobile.util.HtmlUtils;
import com.karumi.dexter.Dexter;
import com.karumi.dexter.listener.PermissionGrantedResponse;
import com.karumi.dexter.listener.single.EmptyPermissionListener;
```
This resolution assumes that both `BackActivity` and `RepositoryThemeActivity` are needed (or at least not conflicting in their usage), and that `AttributesUtils` is required for the functionality introduced in the other branch. If there's a specific reason to prefer one base activity class over the other, or if `AttributesUtils` is not needed, adjustments would be necessary based on the actual requirements and code changes in the rest of the file.