<think>
No reasoning found</think>
To resolve the merge conflict, we need to understand the intent behind the changes in both `HEAD` and the `ed08e371978529db8a908e266dc1a8add1d37967` branch.

**`HEAD` branch changes:**
1.  It modifies the formatting of the method signature, specifically the line `final HttpSession session) {`, to have a different indentation.
2.  It changes the `HashMap` initialization to use the diamond operator: `new HashMap<>()`. This is a stylistic change for brevity, functionally equivalent to `new HashMap<ReturnableData, Object>()` in this context due to type inference.

**`ed08e371978529db8a908e266dc1a8add1d37967` branch changes:**
1.  It also has a specific formatting for the method signature line `final HttpSession session) {`, with less indentation than `HEAD`.
2.  It initializes the `HashMap` using the explicit type arguments: `new HashMap<ReturnableData, Object>()`.
3.  It adds a new line: `ret.put(AjaxResponse.GAME_CHAT_ENABLED, gameChatEnabled);`. This appears to be an addition of new functionality, recording whether game chat is enabled.

**Semantic Resolution Strategy:**
The primary semantic change is the addition of the `gameChatEnabled` property to the `ret` map from the `ed08e371978529db8a908e266dc1a8add1d37967` branch. This functionality should likely be preserved.
The differences in `HashMap` initialization are stylistic. The diamond operator (`<>`) from `HEAD` is generally preferred in modern Java for conciseness.
The differences in the indentation of `final HttpSession session) {` are also stylistic.

A good merge should:
1.  Incorporate the new functionality (adding `GAME_CHAT_ENABLED`).
2.  Adopt a consistent style for map initialization (preferably the diamond operator from `HEAD`).
3.  Adopt a consistent style for the method signature line. We will choose `HEAD`'s styling for the method signature line as it's common to align parameters for readability if they wrap.

So, the resolution will use:
- The method signature line `final HttpSession session) {` from `HEAD`.
- The `HashMap` initialization `new HashMap<>();` from `HEAD`.
- The added line `ret.put(AjaxResponse.GAME_CHAT_ENABLED, gameChatEnabled);` from `ed08e371978529db8a908e266dc1a8add1d37967`.

The indentation for each chosen line will be preserved as it appeared in its respective branch within the conflict.

```java
    this.userPermalinkFormatString = userPermalinkFormatString;
  }

  @Override
  public Map<ReturnableData, Object> handle(final RequestWrapper request,
                                            final HttpSession session) {
    final HashMap<ReturnableData, Object> ret = new HashMap<>();
    ret.put(AjaxResponse.GAME_CHAT_ENABLED, gameChatEnabled);
    ret.put(AjaxResponse.GLOBAL_CHAT_ENABLED, globalChatEnabled);

    if (banList.contains(request.getRemoteAddr())) {
      LOG.info(String.format("Rejecting user from %s because they are banned.",
              request.getRemoteAddr()));

```