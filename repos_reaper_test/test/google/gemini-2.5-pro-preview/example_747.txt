<think>
No reasoning found</think>
The conflict arises from a stylistic difference in how a method chain is formatted, specifically around the `.setDuration()` call.

**HEAD version:**
```java
        animate().translationX(params.leftMargin).setDuration(SideBar.SLIDE_ANIMATION_DURATION_MS).start();
```
This version has the entire method chain on a single line.

**Incoming change (c923751783db11df8cb8dc1909ab59605492344c):**
```java
        animate().translationX(params.leftMargin).setDuration(
                SideBar.SLIDE_ANIMATION_DURATION_MS).start();
```
This version introduces a line break after `setDuration(` and indents the argument `SideBar.SLIDE_ANIMATION_DURATION_MS`.

**Semantic Analysis:**
Both versions of the code are trying to achieve the exact same semantic outcome:
1. Get the current `LayoutParams` of the view.
2. Animate the view's `translationX` property to the value of `params.leftMargin`.
3. Set the duration of this animation to `SideBar.SLIDE_ANIMATION_DURATION_MS`.
4. Start the animation.

The actual method calls and their arguments are identical in both branches (`animate()`, `translationX(params.leftMargin)`, `setDuration(SideBar.SLIDE_ANIMATION_DURATION_MS)`, `start()`). The difference is purely in source code formatting (whitespace and line breaks).

**Resolution:**
Since the intent and semantics are identical, there is no functional conflict. The choice is purely stylistic. It's common for code formatters or developers to break long method chains for readability. Assuming the incoming change (with the line break) was an intentional formatting improvement (e.g., to fit within line length limits or align with a project's coding style), it is reasonable to accept this version.

The resolved code will adopt the formatting from the incoming change.

```java
>>>>>>> c923751783db11df8cb8dc1909ab59605492344c
    }

    public void notifySidebarSlideOpen() {
        FrameLayout.LayoutParams params = (FrameLayout.LayoutParams) getLayoutParams();
        animate().translationX(params.leftMargin).setDuration(
                SideBar.SLIDE_ANIMATION_DURATION_MS).start();
    }

    public void hideWidgets() {
        mIsHidden = true;
```