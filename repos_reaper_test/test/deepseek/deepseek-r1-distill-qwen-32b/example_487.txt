<think>
No reasoning found</think>
I'll help resolve this semantic merge conflict. Let's analyze the changes:

1. The older version (91801fdd) declares:
```java
	private BitmapTexture mFontBitmapTexture;
```

2. The newer version (HEAD) declares:
```java
	private BitmapTextureAtlas mFontTexture;
```

From the context, this appears to be a refactoring where `BitmapTexture` is being replaced with `BitmapTextureAtlas`. Both are related to texture handling in libGDX, but `BitmapTextureAtlas` is more commonly used with modern libGDX applications as it provides better management of multiple textures.

To resolve this, I'll keep the newer version since it seems to represent the intended refactoring direction.

Here's the resolved snippet:

```java
>>>>>>> 91801fdd7714064242fef90013824ede2bbcbe9d

	private TextureRegion mRadarPointTextureRegion;
	private TextureRegion mRadarTextureRegion;

<<<<<<< HEAD
	private BitmapTexture mFontBitmapTexture;
=======
	private BitmapTextureAtlas mFontTexture;
>>>>>>> 91801fdd7714064242fef90013824ede2bbcbe9d
	private Font mFont;

	private Location mUserLocation;

	private final ArrayList<City> mCities = new ArrayList<City>();
```