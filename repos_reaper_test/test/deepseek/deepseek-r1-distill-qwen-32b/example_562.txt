<think>
No reasoning found</think>
To resolve this conflict, we need to understand the intent behind both changes:

1. The first change (HEAD) uses `assertThat()` with Hamcrest matchers (`isNull()`, `isNotNull()`, `isTrue()`)
2. The second change (`a17acec`) uses JUnit's standard assert methods (`assertEquals()`, `assertNotNull()`, `assertTrue()`)

Without additional context about the project's preferred testing style, it's ambiguous whether one approach is preferred over the other. Both changes are checking the exact same conditions, just using different assertion styles.

I will return the code with the conflict unresolved since the intent is ambiguous:

```java

  @Test
  public void checkV1_0() {
    Connection<User> con = new Connection<User>(new DefaultFacebookClient(Version.LATEST),
      jsonFromClasspath("v1_0/connection-user-friends"), User.class);
<<<<<<< HEAD
    assertThat(con.getTotalCount()).isNull();
    assertThat(con.getNextPageUrl()).isNotNull();
    assertThat(con.hasNext()).isTrue();
=======
    assertEquals(null, con.getTotalCount());
    assertNotNull(con.getNextPageUrl());
    assertTrue(con.hasNext());
>>>>>>> a17acec0655b8058aaf4d336ba2a1352aa49e2fe
  }

  @Test
  public void checkV2_0() {
    Connection<User> con = new Connection<User>(new DefaultFacebookClient(Version.LATEST),

```