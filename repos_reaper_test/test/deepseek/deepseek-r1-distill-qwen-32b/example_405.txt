<think>
No reasoning found</think>
The code snippet shows a merge conflict in a Java file. The conflict is within an `if` statement that checks whether to use the current player's name from the `GamesClient` or from the saved instance state.

<<<<<<< HEAD
The `setSummary` method on the `account` object is calling `getString` with a resource ID and a parameter. On the left side (HEAD), the parameter is obtained by first calling `Games.Players.getCurrentPlayer(gc)` and then getting the display name. On the right side, the parameter is obtained by directly calling `gc.getCurrentPlayer().getDisplayName()`.
=======
Both sides aim to set the account summary with the player's name. The only difference is the way they access the player's name. The right side's approach is more concise.
>>>>>>> 

I'll resolve the conflict by choosing the version from the right side as it's more concise and achieves the same goal without any functional difference.

Resolved code:

```java
		// change for example), then the fragment's onCreate is called before
		// the new GamesClient is setup. In this case, just use the player name
		// saved in the savedInstanceState bundle
		if ((savedInstanceState == null && ((MainActivity) getActivity()).getGC().isConnected())
				|| (savedInstanceState != null && savedInstanceState.containsKey("player"))) {
			account.setSummary(getString(R.string.signed_in, ((MainActivity) getActivity()).getGC().getCurrentPlayer().getDisplayName()));
=======
			account.setSummary(getString(
					R.string.signed_in,
					((MainActivity) getActivity()).getGC().getCurrentPlayer().getDisplayName()));
>>>>>>> 467f0adf711b7a96412e01a8f7ba4a578559a3bb
		}

		final SharedPreferences prefs = getActivity().getSharedPreferences("pedometer",
				Context.MODE_MULTI_PROCESS);
```