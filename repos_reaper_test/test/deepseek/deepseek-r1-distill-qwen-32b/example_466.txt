<think>
No reasoning found</think>
```java
        return new AggregateResult(context).withSuffix(suffix);
    }

    @Nonnull
    @Override
<<<<<<< HEAD
    public MetricResult measureUser(TestUser user, ResultList recommendations, Context context) {
        LongSet good = goodItems.selectItems(context.universe, context.recommender, user);
=======
    public MetricResult measureUser(TestUser user, int targetLength, ResultList recommendations, Context context) {
        LongSet good = goodItems.selectItems(context.universe, user);
>>>>>>> ae1b395ec63b1333c717fdac150e0860cf0326e0
        if (good.isEmpty()) {
            logger.warn("no good items for user {}", user.getUserId());
        }

        Integer rank = null;
```

Both sides seem to be modifying the `measureUser` method. The HEAD branch adds a `context.recommender` parameter to `goodItems.selectItems()`, while the other side is renaming the method parameter to include `targetLength` and modifying the call to `goodItems.selectItems()`.

Without more context, it's unclear which change is intended. The conflict is preserved.