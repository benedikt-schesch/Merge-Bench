<think>
No reasoning found</think>
To resolve this merge conflict, we should combine the changes from both sides to ensure both the file cleanup and proper encoding are handled. Here's the resolved code:

```java
	static public File createInputFile(String tmpFilenamePrefix, 
			                           String tmpFilenameSuffix, 
			                           String[] inputData) 
	throws IOException {
		File f = File.createTempFile(tmpFilenamePrefix, tmpFilenameSuffix);
		f.deleteOnExit();
		PrintWriter pw = new PrintWriter(new OutputStreamWriter(new FileOutputStream(f), "UTF-8"));
		for (int i=0; i<inputData.length; i++){
			pw.println(inputData[i]);
		}
		pw.close();
		return f;
```

**Step-by-Step Explanation:**

1. **Added `f.deleteOnExit();`**: This ensures the temporary file is automatically deleted when the program exits, which is good for cleanup.
2. **Specified UTF-8 Encoding**: Using `OutputStreamWriter` with UTF-8 encoding ensures that the file is saved with proper character encoding, which is especially important for text containing special characters.

Both changes enhance the robustness and reliability of the code, so combining them is the best approach.