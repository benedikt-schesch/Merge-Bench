<think>
No reasoning found</think>
```java
	// Fields
	// ===========================================================

	private Camera mCamera;

<<<<<<< HEAD
	private BitmapTexture mBitmapTexture;
=======
	private BitmapTextureAtlas mBitmapTextureAtlas;
>>>>>>> 91801fdd7714064242fef90013824ede2bbcbe9d
	private TextureRegion mFaceTextureRegion;

	private int mFaceIDCounter;
	private final SparseArray<Sprite> mFaces = new SparseArray<Sprite>();
```

To resolve this conflict, we need to consider the semantic intent of both changes:

1. The `HEAD` branch introduces `BitmapTexture`
2. The other branch introduces `BitmapTextureAtlas`

Given that `BitmapTextureAtlas` appears to be a more comprehensive class that likely includes the functionality of `BitmapTexture` plus additional features for managing texture atlases, we should prefer `BitmapTextureAtlas` as it provides more flexibility and is likely the intended direction of the codebase.

The resolved code will use `BitmapTextureAtlas` from the other branch.