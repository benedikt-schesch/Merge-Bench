<think>
No reasoning found</think>
```java
                mAdapter.add(0, new ListRow(header, listRowAdapter));
            }
        }
    }

<<<<<<< HEAD
    private void refreshSubCategories() {
=======
    private void rebuildSubCategories() {
>>>>>>> 308db82053c3707c95c8a180e78ac06043dff2a5
        List<Video> videos = Video.listAll(Video.class);
        Collections.sort(videos, new Comparator<Video>() {
            @Override
            public int compare(Video o1, Video o2) {
                return Long.valueOf(o2.getCreated()).compareTo(o1.getCreated());
```

The merge conflict is in the method name, with one side named `refreshSubCategories()` and the other named `rebuildSubCategories()`. The context suggests the method is responsible for refreshing or rebuilding subcategories by loading and sorting videos. The intent of both methods seems aligned, but the specific naming is conflicting. Without more context on the project's naming conventions or the exact differences between `refresh` and `rebuild` in this scope, it's safest to leave the conflict unresolved.