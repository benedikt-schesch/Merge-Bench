<think>
No reasoning found</think>
The conflict arises from two different ways to retrieve the current player's display name. The left side uses a static method `Games.Players.getCurrentPlayer()`, while the right side uses the instance method `getGC().getCurrentPlayer()`. The right approach is to use the instance method as it correctly accesses the current player via the GamesClient instance.

```java
		// change for example), then the fragment's onCreate is called before
		// the new GamesClient is setup. In this case, just use the player name
		// saved in the savedInstanceState bundle
		if ((savedInstanceState == null && ((MainActivity) getActivity()).getGC().isConnected())
				|| (savedInstanceState != null && savedInstanceState.containsKey("player"))) {
<<<<<<< HEAD
			account.setSummary(getString(R.string.signed_in, savedInstanceState == null ? Games.Players.getCurrentPlayer(((MainActivity) getActivity()).getGC())
					.getDisplayName() : savedInstanceState.getString("player")));
=======
			account.setSummary(getString(
					R.string.signed_in,
					savedInstanceState == null ? ((MainActivity) getActivity()).getGC()
							.getCurrentPlayer().getDisplayName() : savedInstanceState
							.getString("player")));
>>>>>>> 467f0adf711b7a96412e01a8f7ba4a578559a3bb
		}

		final SharedPreferences prefs = getActivity().getSharedPreferences("pedometer",
				Context.MODE_MULTI_PROCESS);
```