<think>
No reasoning found</think>
Here is the provided snippet with the full context and surrounding code:

```java
                mAdapter.add(0, new ListRow(header, listRowAdapter));
            }
        }
    }

<<<<<<< HEAD
    private void refreshSubCategories() {
=======
    private void rebuildSubCategories() {
>>>>>>> 308db82053c3707c95c8a180e78ac06043dff2a5
        List<Video> videos = Video.listAll(Video.class);
        Collections.sort(videos, new Comparator<Video>() {
            @Override
            public int compare(Video o1, Video o2) {
                return Long.valueOf(o2.getCreated()).compareTo(o1.getCreated());
```

Both approaches (`refreshSubCategories` and `rebuildSubCategories`) appear to serve the same semantic purpose of fetching and sorting videos. However, the choice of method name depends on the intended semantics:

1. `refreshSubCategories()` suggests the operation is refreshing existing data
2. `rebuildSubCategories()` suggests the operation is reconstructing or re-building the categories from scratch

Without additional context about whether this operation is meant to refresh existing state vs build a new state, it's unclear which is more appropriate. I would recommend choosing the name that better aligns with the specific intent of the method in your use case.