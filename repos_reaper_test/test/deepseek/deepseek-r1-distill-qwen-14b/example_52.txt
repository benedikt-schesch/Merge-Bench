<think>
No reasoning found</think>
The merge conflict arises from differing syntax when initializing the `HashMap`. The left side uses explicit generic types, while the right uses the diamond operator. Both achieve the same result, but the diamond operator is cleaner and preferred in modern Java.

```java
   *
   * @param player The player for whom to get status.
   * @return Information for {@code player}: Name, score, status.
   */
  public Map<GamePlayerInfo, Object> getPlayerInfo(final Player player) {
<<<<<<< HEAD
    final Map<GamePlayerInfo, Object> playerInfo = new HashMap<GamePlayerInfo, Object>();
=======
    final Map<GamePlayerInfo, Object> playerInfo = new HashMap<>();
>>>>>>> 5adedd24812861bedaf540555ec046746b42b42a
    // TODO make sure this can't happen in the first place
    if (player == null) {
      return playerInfo;
    }
    playerInfo.put(GamePlayerInfo.NAME, player.getUser().getNickname());
```