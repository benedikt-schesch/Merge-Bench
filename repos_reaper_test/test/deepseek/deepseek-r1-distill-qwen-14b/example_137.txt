<think>
No reasoning found</think>
The conflict arises from a change in the execution engine type. The right side updates from `HExecutionEngine` to `MRExecutionEngine` and adds an optimization step. Given the intent to use MapReduce execution and improve the plan, the right side should be chosen.

```java
    }

    public static PhysicalPlan buildPp(PigServer pigServer, String query)
    throws Exception {
        LogicalPlan lp = buildLp( pigServer, query );
<<<<<<< HEAD
        return ((HExecutionEngine)pigServer.getPigContext().getExecutionEngine()).compile(lp,
=======
        lp.optimize(pigServer.getPigContext());
        return ((MRExecutionEngine)pigServer.getPigContext().getExecutionEngine()).compile(lp, 
>>>>>>> d95d3beb3c320c98d0af2ce3bcd2f3b656bdc98d
                pigServer.getPigContext().getProperties());
    }

    public static LogicalPlan parse(String query, PigContext pc) throws FrontendException {
        Map<String, String> fileNameMap = new HashMap<String, String>();
```