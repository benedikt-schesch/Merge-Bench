<think>
No reasoning found</think>
The conflict appears to be about how to access the image code system property. Both sides are trying to achieve the same goal of appending `-graalvm` to the version string if the image code is `runtime`, but they differ in how they check this condition:

1. The `HEAD` version uses a constant property key and value, which might be more maintainable if these values are likely to change.
2. The other branch uses hardcoded strings, which is more explicit but less flexible.

Since the intent is consistent but the implementation differs in how the system property is accessed, I'll return the same snippet with the conflict.

```java
    }

    public String toString() {
      // When running the application as a native image, append `-graalvm` to the
      // version.
<<<<<<< HEAD
      String imageCode = System.getProperty(PROPERTY_IMAGE_CODE_KEY);
      if (imageCode != null && imageCode.equals(PROPERTY_IMAGE_CODE_VALUE_RUNTIME)){
=======
      String imageCode = System.getProperty("org.graalvm.nativeimage.imagecode");
      if (imageCode != null && imageCode.equals("runtime")) {
>>>>>>> 1055ff5de3675837270f9739454829ed0cc14cec
        String[] tokens = versionString.split(" ");
        if (tokens.length > 0 && tokens[0].startsWith("gl-java")) {
          tokens[0] += "-graalvm";
          return Joiner.on(" ").join(tokens);
        }
```