<think>
No reasoning found</think>
The conflict is due to differences in the test method's access modifier and a typo in the method name used to prepare the core. The correct resolution is to adopt the changes from the right side, making the method public and fixing the typo.

```java
		assertStatusIs(noTestsRun());
		verify(coreRegistry).addCore(eq(projectAUri), any(InfinitestCore.class));
	}

	@Test
	public void shouldFireAnEvent() throws CoreException {
		InfinitestCore core = prepareCore(projectAUri(), 10);

		workspace.addUpdateListeners(new UpdateListener() {
			@Override
			public void projectsUpdated() {
				updates++;
```