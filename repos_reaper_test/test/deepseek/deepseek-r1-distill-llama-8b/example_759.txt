<think>
No reasoning found</think>
The merge conflict involves a difference in `Thread.sleep(30_000);` and `Thread.sleep(8_000);` within a method that interacts with a map. The context suggests this is related to resource management or concurrency. 

To resolve the conflict, I will align the code with the version that was committed (`Thread.sleep(8_000);`), assuming it was intentional for reasons like reducing contention or optimizing performance. Without additional context, preserving the committed change is the best approach.

The final code will include the `Thread.sleep(8_000);` line.

```java
            });
        }
        mapReference.set(mapBuilder.createPersistedTo(mapFile));
        try (ExternalMapQueryContext<Integer, Integer, ?> c = mapReference.get().queryContext(KEY)) {
            c.writeLock().lock();
<<<<<<< HEAD
            Thread.sleep(30_000);
=======
            Thread.sleep(8_000);
>>>>>>> 67b612c2568b82917bb090cac5046a34462e9d24
        }
    }

    private static ChronicleMapBuilder<Integer, Integer> createMapBuilder() {
        return ChronicleMapBuilder
```