<think>
No reasoning found</think>
To resolve the semantic conflict, ensure the spectator is added and logged atomically within the synchronized block. The log should only occur if the addition is successful.

```java
   *
   * @param user Spectator to add to this game.
   * @throws TooManySpectatorsException Thrown if this game is at its maximum spectator capacity.
   * @throws IllegalStateException      Thrown if {@code user} is already in a game.
   */
<<<<<<< HEAD
  public void addSpectator(final User user) throws TooManySpectatorsException,
      IllegalStateException {
      logger.info(String.format("%s joined game %d as a spectator.", user.toString(), id));
      synchronized (spectators) {
          if (spectators.size() >= options.spectatorLimit) {
              throw new TooManySpectatorsException();
          }
          spectators.add(user);
      }
=======
  public void addSpectator(final User user) throws TooManySpectatorsException, IllegalStateException {
      synchronized (spectators) {
          if (spectators.size() >= options.spectatorLimit) {
              throw new TooManySpectatorsException();
          }
          logger.info(String.format("%s joined game %d as a spectator.", user.toString(), id));
          spectators.add(user);
      }
>>>>>>> 5adedd24812861bedaf540555ec046744b42b42a
```