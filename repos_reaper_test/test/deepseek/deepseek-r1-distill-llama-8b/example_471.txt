<think>
No reasoning found</think>
To resolve the merge conflict, the `setUnlock` method on the right side includes both the `username` and optional `password`, enhancing security compared to the left side's `setUnlock(username)` method. Therefore, the right side's method should be chosen to keep the more secure version.

```java
        void setProcessExpiresFrequency( int processExpiresFrequency );
        void setMemcachedNodes( @Nonnull String memcachedNodes );
        void setFailoverNodes( String failoverNodes );
        void setLockingMode( @Nullable final String lockingMode );
        void setLockingMode( @Nullable final LockingMode lockingMode, @Nullable final Pattern uriPattern, final boolean storeSecondaryBackup );
<<<<<<< HEAD
        void setUsername(String username);
        void setPassword(String password);

=======
        void setUnlock( @Nonnull String username, @Nullable String password );
>>>>>>> a77e57ede407d2f003dc4ee4af2f8650efa56cb0

        /**
         * Creates a new instance of {@link MemcachedBackupSession} (needed so that it's possible to
         * create specialized {@link MemcachedBackupSession} instances).
         */
```