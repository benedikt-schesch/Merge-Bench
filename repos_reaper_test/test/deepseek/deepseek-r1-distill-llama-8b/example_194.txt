<think>
No reasoning found</think>
```java
            throw new RuntimeException(sb.toString(), e);
        }
        return ret;
    }
    
<<<<<<< HEAD
    public static Object instantiateFuncFromSpec(String funcSpec) {
        return instantiateFunc(getClassNameFromSpec(funcSpec), getArgStringFromSpec(funcSpec));
=======
    public static Object instantiateFuncFromSpec(FuncSpec funcSpec) {
        return instantiateFunc(getClassNameFromSpec(funcSpec), getArgStringFromSpec(funcSpec));
>>>>>>> 1488b22ce313803d012c8ace36c3b12f930ee309
```

```markdown
The left side's `instantiateFuncFromSpec` method now specifies that it takes a `FuncSpec` parameter instead of a `String`, aligning the method signature with its use of `FuncSpec`. This resolves the semantic conflict by ensuring the method expects and uses the correct parameter type.
```