<think>
No reasoning found</think>
To resolve the merge conflict, I have chosen the version from the right side of the conflict as it consistently uses `keyWritable`, which seems to be the intended variable here. This ensures that the key is processed correctly and the code remains consistent. The left version may have been using a local variable, but the right version is more appropriate for the intended logic.

```java
        Packager pkgr = packagers.get(index);

        // check to see if we need to unwrap the key. The keys may be
        // wrapped inside a tuple by LocalRearrange operator when jobs
        // with different map key types are merged
<<<<<<< HEAD
        PigNullableWritable curKey = myKey;
        if (!sameMapKeyType && !inCombiner && isKeyWrapped.get(index)) {
            Tuple tup = (Tuple)myKey.getValueAsPigType();
=======
        PigNullableWritable curKey = keyWritable;
        if (!sameMapKeyType && !inCombiner && isKeyWrapped.get(index)) {
            Tuple tup = (Tuple) keyWritable.getValueAsPigType();
>>>>>>> 88ae4a5fc1d6ff4a9d3c070fe2fc64a50827c37a
            curKey = HDataType.getWritableComparableTypes(tup.get(0),
                    pkgr.getKeyType());
            curKey.setIndex(origIndex);
        }
```