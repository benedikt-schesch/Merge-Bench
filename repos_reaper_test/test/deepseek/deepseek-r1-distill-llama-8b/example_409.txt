<think>
No reasoning found</think>
The code snippet shows a merge conflict in a test method where two versions of the code attempt to set the "source-highlighter" attribute differently and interact with the result of processing an Asciidoc file.

### Analysis:
1. The left side (from HEAD) uses `JBakeProperty.ASCIIDOCTOR_ATTRIBUTES` to set the property and expects the result of `processFile()` to be a `DocumentModel`.
2. The right side (from the other branch) sets a property using the key obtained from `ASCIIDOCTOR_ATTRIBUTES.getKey()` and expects the result to be a `Map<String, Object>`, likely due to a change in the return type of `processFile()`.
3. The left side's assertions are type-specific (`DocumentModel`), while the right side's are more generic (`Map`), indicating a potential change in how the data is processed and handled.

### Conclusion:
To merge this, the type of the variable `map` should match its type declaration (`Map<String, Object>`) and any dependent code (e.g., assertions) should be updated accordingly. The property being set also needs to be consistent between both branches.

The provided code after applying the correct type and merging the property setting:

```java
    @Test
    public void parseAsciidocFileWithPrettifyAttribute() {

        config.setProperty(JBakeProperty.ASCIIDOCTOR_ATTRIBUTES, "source-highlighter=prettify");
        Map<String, Object> map = parser.processFile(asciidocWithSource);
        Assert.assertNotNull(map);
        Assert.assertEquals("draft", map.getStatus());
        Assert.assertEquals("post", map.getType());
        assertThat(map.getBody())
                .contains("class=\"paragraph\"")
```