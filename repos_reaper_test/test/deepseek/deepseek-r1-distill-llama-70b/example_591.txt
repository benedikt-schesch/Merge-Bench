<think>
No reasoning found</think>
Here is the resolved code snippet:

```java
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

/**
 * Base class that contains data and functionality common to {@link DefaultFacebookClient} and
 * {@link DefaultLegacyFacebookClient}.
 * 
 * @author <a href="http://restfb.com">Mark Allen</a>
 * @since 1.5
 */
abstract class BaseFacebookClient {
```

I resolved this conflict by combining both versions to better reflect the intent of the codebase. The base class is now properly documented as serving both `DefaultFacebookClient` and `DefaultLegacyFacebookClient`, which aligns with the semantics of having a shared base class.

The key changes made:
1. Removed the original single-client description from HEAD
2. Kept the more comprehensive description of the shared functionality
3. Maintained the original author and since information
4. Preserved the spacing and formatting of the original Javadoc