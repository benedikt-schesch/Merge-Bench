<think>
No reasoning found</think>
I cannot resolve this conflict as the intent between the two sides is ambiguous. The left side has a `protected` method with 4 parameters, while the right side has a `private` method with an additional `OptionHandlerFilter` parameter. The access modifier change and the additional parameter suggest potentially different design intents. I will return the snippet with the conflict:

```java
     * @param handler  handler where to receive the information
     * @param len      Maximum length of metadata column
     * @param rb       ResourceBundle for I18N
     * @see Setter#asAnnotatedElement()
     */
<<<<<<< HEAD
    protected void printOption(PrintWriter out, OptionHandler handler, int len, ResourceBundle rb) {
=======
    private void printOption(PrintWriter out, OptionHandler handler, int len, ResourceBundle rb, OptionHandlerFilter filter) {
>>>>>>> 1acff436c29ed9c0f9ce81ad845b3df7480dde83
    	// Hiding options without usage information
    	if (handler.option.usage() == null ||
            handler.option.usage().length() == 0 ||
            !filter.select(handler)) {
    		return;

```