<think>
No reasoning found</think>
The conflict is about how to initialize the ArrayList. Both sides are trying to create an ArrayList with the same initial capacity, but differ in syntax. The HEAD uses an explicit type parameter, while the other uses the diamond operator. Both achieve the same result, but the diamond operator is more concise and preferred in modern Java.

```java
   *
   * @param cards Cards to convert to client data.
   * @return Client representation of {@code cards}.
   */
  private List<Map<WhiteCardData, Object>> getWhiteCardData(final List<WhiteCard> cards) {
    final List<Map<WhiteCardData, Object>> data = new ArrayList<>(cards.size());
    for (final WhiteCard card : cards) {
      data.add(card.getClientData());
    }
    return data;
  }
```