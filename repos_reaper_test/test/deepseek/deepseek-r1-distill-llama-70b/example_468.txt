<think>
No reasoning found</think>
Here is the unresolved merge conflict as it was presented:

```java
        final int currentIdx = 44 + idLength + 2;
        final short principalDataLength = (short) decodeNum( data, currentIdx, 2 );
        if ( principalDataLength > 0 ) {
            final byte[] principalData = new byte[principalDataLength];
            System.arraycopy( data, currentIdx + 2, principalData, 0, principalDataLength );
<<<<<<< HEAD
            result.setPrincipal( deserializePrincipal( principalData, manager ) );
=======
            result.setPrincipalInternal( deserializePrincipal( principalData, realm ) );
>>>>>>> 6c5fb5474dc66d5ab104a5546f43f05b75a4aaa2
        }

        final byte[] attributesData = new byte[ data.length - sessionFieldsDataLength ];
        System.arraycopy( data, sessionFieldsDataLength, attributesData, 0, data.length - sessionFieldsDataLength );
```

The conflict between `setPrincipal()` and `setPrincipalInternal()` with different parameters `manager` vs. `realm` cannot be resolved without additional context about the intent and changes made in the codebase.