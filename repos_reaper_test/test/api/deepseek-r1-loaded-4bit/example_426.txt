<think>
Okay, I need to resolve this merge conflict in the Java code. Let me look at the two versions. 

The HEAD version has imports for R, NetworkSearchTask, and OnSharesFoundListener. The other branch, 971b9954, adds imports for Activity and keeps some of the same ones like Dialog, DialogFragment, etc.

The conflict is in the import statements. Both sides are adding different imports. Since they're in the same package, maybe both sets of imports are needed. The Activity import from the other branch is probably necessary for some code in that version. The HEAD imports are related to tasks and resources. 

I should combine both sets of imports. The order might not matter, but it's good to organize them. Let me check if any imports are duplicates. The HEAD has com.jerrellmardis.amphitheatre.R and others, while the other adds android.app.Activity. 

So the correct merge would include all the imports from both branches. That means adding Activity from the second branch and keeping the R and NetworkSearchTask imports from HEAD. The other imports like Dialog, DialogFragment, Bundle, etc., are common in both, so they stay once.

So the resolved imports should have both the Activity and the R, NetworkSearchTask, etc. The rest of the code after the imports seems to be the same on both sides, so no conflict there.

Wait, the original code after the imports is the same in both versions. So the conflict is only in the import section. Therefore, the merged code should include all the imports from both sides without duplication. Let me list them all. The merged imports would be:

import com.jerrellmardis.amphitheatre.R;
import com.jerrellmardis.amphitheatre.task.NetworkSearchTask;
import com.jerrellmardis.amphitheatre.task.NetworkSearchTask.OnSharesFoundListener;
import android.app.Activity;
import android.app.Dialog;
import android.app.DialogFragment;
import android.content.DialogInterface;
import android.os.Bundle;
import android.text.TextUtils;

That way, both sets of changes are included. There's no overlap except for the common imports, which are already present. So the conflict markers can be removed, and all the necessary imports are kept.</think>
```java
 * limitations under the License.
 */

package com.jerrellmardis.amphitheatre.fragment;

import com.jerrellmardis.amphitheatre.R;
import com.jerrellmardis.amphitheatre.task.NetworkSearchTask;
import com.jerrellmardis.amphitheatre.task.NetworkSearchTask.OnSharesFoundListener;
import android.app.Activity;
import android.app.Dialog;
import android.app.DialogFragment;
import android.content.DialogInterface;
import android.os.Bundle;
import android.text.TextUtils;

```