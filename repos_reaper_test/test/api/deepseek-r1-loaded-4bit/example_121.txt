<think>
Okay, I need to resolve this merge conflict in the Java imports. Let's look at the code snippet.

The conflict is between the HEAD commit and the commit f8f91f1d455f6842ca57b8294f6a263ff0cde1e4. Both sides are adding an import, but in different places. The HEAD version has the import for HtmlUtils, Dexter, and some PermissionListener classes, then there's a conflict marker. The other branch adds an import for MentionsEditable right after the Dexter imports.

Wait, the HEAD doesn't have the MentionsEditable import, while the other branch does. Since they are both adding different imports, maybe they can be merged together without conflict. Let me check the order. The HEAD's imports after the conflict are continuing with SuggestionsResult and others. The other branch adds MentionsEditable before that. So the correct resolution would be to include both imports, placing the MentionsEditable import from the other branch right after the Dexter-related imports and before the spyglass ones. That way, both changes are preserved, and the imports are ordered properly. There's no overlap in the actual lines, so combining them should resolve the conflict. I'll merge the two import lines, making sure to keep all necessary imports without duplication.</think>
```java
import com.github.mobile.util.HtmlUtils;
import com.karumi.dexter.Dexter;
import com.karumi.dexter.listener.PermissionGrantedResponse;
import com.karumi.dexter.listener.single.EmptyPermissionListener;
import com.karumi.dexter.listener.single.PermissionListener;
import com.linkedin.android.spyglass.mentions.MentionsEditable;
import com.linkedin.android.spyglass.suggestions.SuggestionsResult;
import com.linkedin.android.spyglass.tokenization.QueryToken;
import com.linkedin.android.spyglass.tokenization.interfaces.QueryTokenReceiver;
import com.linkedin.android.spyglass.ui.RichEditorView;
import com.mikepenz.iconics.IconicsDrawable;
```